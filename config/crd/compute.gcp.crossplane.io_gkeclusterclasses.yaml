
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: gkeclusterclasses.compute.gcp.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: compute.gcp.crossplane.io
  names:
    kind: GKEClusterClass
    listKind: GKEClusterClassList
    plural: gkeclusterclasses
    singular: gkeclusterclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A GKEClusterClass is a resource class. It defines the desired spec
        of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            GKECluster.
          properties:
            clusterIPV4CIDR:
              description: ClusterIPV4CIDR specifies the IP address range of the pod
                IPs in this cluster. This is applicable only if EnableIPAlias is true.
                Omit this field to have a range chosen with the default size. Set
                it to a netmask (e.g. /24) to have a range chosen with a specific
                netmask.
              type: string
            clusterSecondaryRangeName:
              description: ClusterSecondaryRangeName specifies the name of the secondary
                range to be used for the cluster CIDR block. The secondary range will
                be used for pod IP addresses. This must be an existing secondary range
                associated with the cluster subnetwork.
              type: string
            clusterVersion:
              description: ClusterVersion is the initial Kubernetes version for this
                cluster. Users may specify either explicit versions offered by Kubernetes
                Engine or version aliases, for example "latest", "1.X", or "1.X.Y".
                Leave unset to use the default version.
              type: string
            createSubnetwork:
              description: CreateSubnetwork determines whether a new subnetwork will
                be created automatically for the cluster. Only applicable when EnableIPAlias
                is true.
              type: boolean
            enableIPAlias:
              description: EnableIPAlias determines whether Alias IPs will be used
                for pod IPs in the cluster.
              type: boolean
            labels:
              additionalProperties:
                type: string
              description: Labels for the cluster to use to annotate any related Google
                Compute Engine resources.
              type: object
            machineType:
              description: MachineType is the name of a Google Compute Engine machine
                type (e.g. n1-standard-1). If unspecified the default machine type
                is n1-standard-1.
              type: string
            network:
              description: Network is the name of the Google Compute Engine network
                to which the cluster is connected. If left unspecified, the default
                network will be used.
              type: string
            networkRef:
              description: NetworkRef references to a Network and retrieves its URI
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            nodeIPV4CIDR:
              description: NodeIPV4CIDR specifies the IP address range of the instance
                IPs in this cluster. This is applicable only if CreateSubnetwork is
                true. Omit this field to have a range chosen with the default size.
                Set it to a netmask (e.g. /24) to have a range chosen with a specific
                netmask.
              type: string
            numNodes:
              description: NumNodes is the number of nodes to create in this cluster.
                You must ensure that your Compute Engine resource quota is sufficient
                for this number of instances. You must also have available firewall
                and routes quota.
              format: int64
              type: integer
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            scopes:
              description: Scopes are the set of Google API scopes to be made available
                on all of the node VMs under the "default" service account.
              items:
                type: string
              type: array
            serviceIPV4CIDR:
              description: ServiceIPV4CIDR specifies the IP address range of service
                IPs in this cluster. This is applicable only if EnableIPAlias is true.
                Omit this field to have a range chosen with the default size. Set
                it to a netmask (e.g. /24) to have a range chosen with a specific
                netmask.
              type: string
            servicesSecondaryRangeName:
              description: ServicesSecondaryRangeName specifies the name of the secondary
                range to be used as for the services CIDR block. The secondary range
                will be used for service ClusterIPs. This must be an existing secondary
                range associated with the cluster subnetwork.
              type: string
            subnetwork:
              description: Subnetwork is the name of the Google Compute Engine subnetwork
                to which the cluster is connected.
              type: string
            subnetworkRef:
              description: SubnetworkRef references to a Subnetwork and retrieves
                its URI
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
            zone:
              description: Zone specifies the name of the Google Compute Engine zone
                in which this cluster resides.
              type: string
          required:
          - numNodes
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
