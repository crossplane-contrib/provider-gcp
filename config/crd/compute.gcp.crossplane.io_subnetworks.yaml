
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: subnetworks.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    kind: Subnetwork
    listKind: SubnetworkList
    plural: subnetworks
    singular: subnetwork
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A Subnetwork is a managed resource that represents a Google Compute
        Engine VPC Subnetwork.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A SubnetworkSpec defines the desired state of a Subnetwork.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplaneio/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplaneio/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            description:
              description: 'Description: An optional description of this resource.
                Provide this property when you create the resource. This field can
                be set only at resource creation time.'
              type: string
            enableFlowLogs:
              description: 'EnableFlowLogs: Whether to enable flow logging for this
                subnetwork. If this field is not explicitly set, it will not appear
                in get listings. If not set the default behavior is to disable flow
                logging.'
              type: boolean
            ipCidrRange:
              description: 'IPCIDRRange: The range of internal addresses that are
                owned by this subnetwork. Provide this property when you create the
                subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must
                be unique and non-overlapping within a network. Only IPv4 is supported.
                This field can be set only at resource creation time.'
              type: string
            name:
              description: 'Name: The name of the resource, provided by the client
                when initially creating the resource. The name must be 1-63 characters
                long, and comply with RFC1035. Specifically, the name must be 1-63
                characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
                which means the first character must be a lowercase letter, and all
                following characters must be a dash, lowercase letter, or digit, except
                the last character, which cannot be a dash.'
              type: string
            network:
              description: 'Network: The URL of the network to which this subnetwork
                belongs, provided by the client when initially creating the subnetwork.
                Only networks that are in the distributed mode can have subnetworks.
                This field can be set only at resource creation time.'
              type: string
            networkRef:
              description: NetworkRef references to a Network and retrieves its URI
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            privateIpGoogleAccess:
              description: 'PrivateIPGoogleAccess: Whether the VMs in this subnet
                can access Google services without assigned external IP addresses.
                This field can be both set at resource creation time and updated using
                setPrivateIPGoogleAccess.'
              type: boolean
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to the external
                resource this managed resource manages when the managed resource is
                deleted. "Delete" deletes the external resource, while "Retain" (the
                default) does not. Note this behaviour is subtly different from other
                uses of the ReclaimPolicy concept within the Kubernetes ecosystem
                per https://github.com/crossplaneio/crossplane-runtime/issues/21
              type: string
            region:
              description: 'Region: URL of the region where the Subnetwork resides.
                This field can be set only at resource creation time.'
              type: string
            secondaryIpRanges:
              description: 'SecondaryIPRanges: An array of configurations for secondary
                IP ranges for VM instances contained in this subnetwork. The primary
                IP of such VM must belong to the primary ipCidrRange of the subnetwork.
                The alias IPs may belong to either primary or secondary ranges. This
                field can be updated with a patch request.'
              items:
                description: A GCPSubnetworkSecondaryRange defines the state of a
                  Google Compute Engine VPC Subnetwork secondary range.
                properties:
                  ipCidrRange:
                    description: 'IPCIDRRange: The range of IP addresses belonging
                      to this subnetwork secondary range. Provide this property when
                      you create the subnetwork. Ranges must be unique and non-overlapping
                      with all primary and secondary IP ranges within a network. Only
                      IPv4 is supported.'
                    type: string
                  rangeName:
                    description: 'RangeName: The name associated with this subnetwork
                      secondary range, used when adding an alias IP range to a VM
                      instance. The name must be 1-63 characters long, and comply
                      with RFC1035. The name must be unique within the subnetwork.'
                    type: string
                required:
                - ipCidrRange
                - rangeName
                type: object
              type: array
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - ipCidrRange
          - name
          - providerRef
          type: object
        status:
          description: A SubnetworkStatus represents the observed state of a Subnetwork.
          properties:
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a managed resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            creationTimestamp:
              description: 'CreationTimestamp: Creation timestamp in RFC3339 text
                format.'
              type: string
            description:
              description: 'Description: An optional description of this resource.
                Provide this property when you create the resource. This field can
                be set only at resource creation time.'
              type: string
            enableFlowLogs:
              description: 'EnableFlowLogs: Whether to enable flow logging for this
                subnetwork. If this field is not explicitly set, it will not appear
                in get listings. If not set the default behavior is to disable flow
                logging.'
              type: boolean
            fingerprint:
              description: "Fingerprint: Fingerprint of this resource. A hash of the
                contents stored in this object. This field is used in optimistic locking.
                This field will be ignored when inserting a Subnetwork. An up-to-date
                fingerprint must be provided in order to update the Subnetwork, otherwise
                the request will fail with error 412 conditionNotMet. \n To see the
                latest fingerprint, make a get() request to retrieve a Subnetwork."
              type: string
            gatewayAddress:
              description: 'GatewayAddress: The gateway address for default routes
                to reach destination addresses outside this subnetwork.'
              type: string
            id:
              description: 'Id: The unique identifier for the resource. This identifier
                is defined by the server.'
              format: int64
              type: integer
            ipCidrRange:
              description: 'IPCIDRRange: The range of internal addresses that are
                owned by this subnetwork. Provide this property when you create the
                subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must
                be unique and non-overlapping within a network. Only IPv4 is supported.
                This field can be set only at resource creation time.'
              type: string
            kind:
              description: 'Kind: Type of the resource. Always compute#subnetwork
                for Subnetwork resources.'
              type: string
            name:
              description: 'Name: The name of the resource, provided by the client
                when initially creating the resource. The name must be 1-63 characters
                long, and comply with RFC1035. Specifically, the name must be 1-63
                characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
                which means the first character must be a lowercase letter, and all
                following characters must be a dash, lowercase letter, or digit, except
                the last character, which cannot be a dash.'
              type: string
            network:
              description: 'Network: The URL of the network to which this subnetwork
                belongs, provided by the client when initially creating the subnetwork.
                Only networks that are in the distributed mode can have subnetworks.
                This field can be set only at resource creation time.'
              type: string
            privateIpGoogleAccess:
              description: 'PrivateIPGoogleAccess: Whether the VMs in this subnet
                can access Google services without assigned external IP addresses.
                This field can be both set at resource creation time and updated using
                setPrivateIPGoogleAccess.'
              type: boolean
            region:
              description: 'Region: URL of the region where the Subnetwork resides.
                This field can be set only at resource creation time.'
              type: string
            secondaryIpRanges:
              description: 'SecondaryIPRanges: An array of configurations for secondary
                IP ranges for VM instances contained in this subnetwork. The primary
                IP of such VM must belong to the primary ipCidrRange of the subnetwork.
                The alias IPs may belong to either primary or secondary ranges. This
                field can be updated with a patch request.'
              items:
                description: A GCPSubnetworkSecondaryRange defines the state of a
                  Google Compute Engine VPC Subnetwork secondary range.
                properties:
                  ipCidrRange:
                    description: 'IPCIDRRange: The range of IP addresses belonging
                      to this subnetwork secondary range. Provide this property when
                      you create the subnetwork. Ranges must be unique and non-overlapping
                      with all primary and secondary IP ranges within a network. Only
                      IPv4 is supported.'
                    type: string
                  rangeName:
                    description: 'RangeName: The name associated with this subnetwork
                      secondary range, used when adding an alias IP range to a VM
                      instance. The name must be 1-63 characters long, and comply
                      with RFC1035. The name must be unique within the subnetwork.'
                    type: string
                required:
                - ipCidrRange
                - rangeName
                type: object
              type: array
            selfLink:
              description: 'SelfLink: Server-defined URL for the resource.'
              type: string
          type: object
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
