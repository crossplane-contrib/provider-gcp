
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: cloudmemorystoreinstanceclasses.cache.gcp.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.gcp.crossplane.io
  names:
    kind: CloudMemorystoreInstanceClass
    listKind: CloudMemorystoreInstanceClassList
    plural: cloudmemorystoreinstanceclasses
    singular: cloudmemorystoreinstanceclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A CloudMemorystoreInstanceClass is a resource class. It defines
        the desired spec of resource claims that use it to dynamically provision a
        managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            CloudMemorystoreInstance.
          properties:
            forProvider:
              description: 'CloudMemorystoreInstanceParameters define the desired
                state of an Google Cloud Memorystore instance. Most fields map directly
                to an Instance: https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance'
              properties:
                alternativeLocationId:
                  description: Only applicable to STANDARD_HA tier which protects
                    the instance against zonal failures by provisioning it across
                    two zones. If provided, it must be a different zone from the one
                    provided in [location_id].
                  type: string
                authorizedNetwork:
                  description: The full name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks)
                    to which the instance is connected. If left unspecified, the `default`
                    network will be used.
                  type: string
                displayName:
                  description: An arbitrary and optional user-provided name for the
                    instance.
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: Resource labels to represent user provided metadata
                  type: object
                locationId:
                  description: The zone where the instance will be provisioned. If
                    not provided, the service will choose a zone for the instance.
                    For STANDARD_HA tier, instances will be created across two zones
                    for protection against zonal failures. If [alternative_location_id]
                    is also provided, it must be different from [location_id].
                  type: string
                memorySizeGb:
                  description: Redis memory size in GiB.
                  format: int32
                  type: integer
                redisConfigs:
                  additionalProperties:
                    type: string
                  description: "Redis configuration parameters, according to http://redis.io/topics/config.
                    Currently, the only supported parameters are: \n  Redis 3.2 and
                    above: \n  *   maxmemory-policy  *   notify-keyspace-events \n
                    \ Redis 4.0 and above: \n  *   activedefrag  *   lfu-log-factor
                    \ *   lfu-decay-time"
                  type: object
                redisVersion:
                  description: "The version of Redis software. If not provided, latest
                    supported version will be used. Updating the version will perform
                    an upgrade/downgrade to the new version. Currently, the supported
                    values are: \n  *   `REDIS_4_0` for Redis 4.0 compatibility (default)
                    \ *   `REDIS_3_2` for Redis 3.2 compatibility"
                  type: string
                region:
                  description: Region in which to create this Cloud Memorystore cluster.
                  type: string
                reservedIpRange:
                  description: The CIDR range of internal addresses that are reserved
                    for this instance. If not provided, the service will choose an
                    unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29.
                    Ranges must be unique and non-overlapping with existing subnets
                    in an authorized network.
                  type: string
                tier:
                  description: Tier specifies the replication level of the Redis cluster.
                    BASIC provides a single Redis instance with no high availability.
                    STANDARD_HA provides a cluster of two Redis instances in distinct
                    availability zones. https://cloud.google.com/memorystore/docs/redis/redis-tiers
                  enum:
                  - BASIC
                  - STANDARD_HA
                  type: string
              required:
              - memorySizeGb
              - region
              - tier
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to external resources
                when managed resources dynamically provisioned using this resource
                class are deleted. "Delete" deletes the external resource, while "Retain"
                (the default) does not. Note this behaviour is subtly different from
                other uses of the ReclaimPolicy concept within the Kubernetes ecosystem
                per https://github.com/crossplaneio/crossplane-runtime/issues/21
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
