
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: buckets.storage.gcp.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: storage.gcp.crossplane.io
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A Bucket is a managed resource that represents a Google Cloud Storage
        bucket.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A BucketSpec defines the desired state of a Bucket.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplaneio/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplaneio/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: BucketParameters define the desired state of the Google
                Cloud Storage Bucket.
              properties:
                billing:
                  description: 'Billing: The bucket''s billing configuration.'
                  properties:
                    requesterPays:
                      description: 'RequesterPays: When set to true, Requester Pays
                        is enabled for this bucket.'
                      type: boolean
                  type: object
                cors:
                  description: 'Cors: The bucket''s Cross-Origin Resource Sharing
                    (CORS) configuration.'
                  items:
                    properties:
                      maxAgeSeconds:
                        description: 'MaxAgeSeconds: The value, in seconds, to return
                          in the Access-Control-Max-Age header used in preflight responses.'
                        format: int64
                        type: integer
                      method:
                        description: 'Method: The list of HTTP methods on which to
                          include CORS response headers, (GET, OPTIONS, POST, etc)
                          Note: "*" is permitted in the list of methods, and means
                          "any method".'
                        items:
                          type: string
                        type: array
                      origin:
                        description: 'Origin: The list of Origins eligible to receive
                          CORS response headers. Note: "*" is permitted in the list
                          of origins, and means "any Origin".'
                        items:
                          type: string
                        type: array
                      responseHeader:
                        description: 'ResponseHeader: The list of HTTP headers other
                          than the simple response headers to give permission for
                          the user-agent to share across domains.'
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                defaultEventBasedHold:
                  description: 'DefaultEventBasedHold: The default value for event-based
                    hold on newly created objects in this bucket. Event-based hold
                    is a way to retain objects indefinitely until an event occurs,
                    signified by the hold''s release. After being released, such objects
                    will be subject to bucket-level retention (if any). One sample
                    use case of this flag is for banks to hold loan documents for
                    at least 3 years after loan is paid in full. Here, bucket-level
                    retention is 3 years and the event is loan being paid in full.
                    In this example, these objects will be held intact for any number
                    of years until the event has occurred (event-based hold on the
                    object is released) and then 3 more years after that. That means
                    retention duration of the objects begins from the moment event-based
                    hold transitioned from true to false. Objects under event-based
                    hold cannot be deleted, overwritten or archived until the hold
                    is removed.'
                  type: boolean
                encryption:
                  description: 'Encryption: Encryption configuration for a bucket.'
                  properties:
                    defaultKmsKeyName:
                      description: 'DefaultKmsKeyName: A Cloud KMS key that will be
                        used to encrypt objects inserted into this bucket, if no encryption
                        method is specified.'
                      type: string
                  type: object
                iamConfiguration:
                  description: 'IamConfiguration: The bucket''s IAM configuration.'
                  properties:
                    bucketPolicyOnly:
                      description: 'BucketPolicyOnly: The bucket''s Bucket Policy
                        Only configuration.'
                      properties:
                        enabled:
                          description: 'Enabled: If set, access is controlled only
                            by bucket-level or above IAM policies.'
                          type: boolean
                        lockedTime:
                          description: 'LockedTime: The deadline for changing iamConfiguration.bucketPolicyOnly.enabled
                            from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled
                            may be changed from true to false until the locked time,
                            after which the field is immutable.'
                          type: string
                      required:
                      - enabled
                      type: object
                    uniformBucketLevelAccess:
                      description: 'UniformBucketLevelAccess: The bucket''s uniform
                        bucket-level access configuration.'
                      properties:
                        enabled:
                          description: 'Enabled: If set, access is controlled only
                            by bucket-level or above IAM policies.'
                          type: boolean
                        lockedTime:
                          description: 'LockedTime: The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled
                            from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled
                            may be changed from true to false until the locked time,
                            after which the field is immutable.'
                          type: string
                      required:
                      - enabled
                      type: object
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  description: 'Labels: User-provided labels, in key/value pairs.'
                  type: object
                lifecycle:
                  description: 'Lifecycle: The bucket''s lifecycle configuration.
                    See lifecycle management for more information.'
                  properties:
                    rule:
                      description: 'Rule: A lifecycle management rule, which is made
                        of an action to take and the condition(s) under which the
                        action will be taken.'
                      items:
                        properties:
                          action:
                            description: 'Action: The action to take.'
                            properties:
                              storageClass:
                                description: 'StorageClass: Target storage class.
                                  Required iff the type of the action is SetStorageClass.'
                                type: string
                              type:
                                description: 'Type: Type of the action. Currently,
                                  only Delete and SetStorageClass are supported.'
                                type: string
                            required:
                            - type
                            type: object
                          condition:
                            description: 'Condition: The condition(s) under which
                              the action will be taken.'
                            properties:
                              age:
                                description: 'Age: Age of an object (in days). This
                                  condition is satisfied when an object reaches the
                                  specified age.'
                                format: int64
                                type: integer
                              createdBefore:
                                description: 'CreatedBefore: A date in RFC 3339 format
                                  with only the date part (for instance, "2013-01-15").
                                  This condition is satisfied when an object is created
                                  before midnight of the specified date in UTC.'
                                type: string
                              isLive:
                                description: 'IsLive: Relevant only for versioned
                                  objects. If the value is true, this condition matches
                                  live objects; if the value is false, it matches
                                  archived objects.'
                                type: boolean
                              matchesPattern:
                                description: 'MatchesPattern: A regular expression
                                  that satisfies the RE2 syntax. This condition is
                                  satisfied when the name of the object matches the
                                  RE2 pattern. Note: This feature is currently in
                                  the "Early Access" launch stage and is only available
                                  to a whitelisted set of users; that means that this
                                  feature may be changed in backward-incompatible
                                  ways and that it is not guaranteed to be released.'
                                type: string
                              matchesStorageClass:
                                description: 'MatchesStorageClass: Objects having
                                  any of the storage classes specified by this condition
                                  will be matched. Values include MULTI_REGIONAL,
                                  REGIONAL, NEARLINE, COLDLINE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.'
                                items:
                                  type: string
                                type: array
                              numNewerVersions:
                                description: 'NumNewerVersions: Relevant only for
                                  versioned objects. If the value is N, this condition
                                  is satisfied when there are at least N versions
                                  (including the live version) newer than this version
                                  of the object.'
                                format: int64
                                type: integer
                            type: object
                        type: object
                      type: array
                  required:
                  - rule
                  type: object
                location:
                  description: 'Location: The location of the bucket. Object data
                    for objects in the bucket resides in physical storage within this
                    region. Defaults to US. See the developer''s guide for the authoritative
                    list.'
                  type: string
                locationType:
                  description: 'LocationType: The type of the bucket location.'
                  type: string
                logging:
                  description: 'Logging: The bucket''s logging configuration, which
                    defines the destination bucket and optional name prefix for the
                    current bucket''s logs.'
                  properties:
                    logBucket:
                      description: 'LogBucket: The destination bucket where the current
                        bucket''s logs should be placed.'
                      type: string
                    logObjectPrefix:
                      description: 'LogObjectPrefix: A prefix for log object names.'
                      type: string
                  type: object
                retentionPolicy:
                  description: 'RetentionPolicy: The bucket''s retention policy. The
                    retention policy enforces a minimum retention time for all objects
                    contained in the bucket, based on their creation time. Any attempt
                    to overwrite or delete objects younger than the retention period
                    will result in a PERMISSION_DENIED error. An unlocked retention
                    policy can be modified or removed from the bucket via a storage.buckets.update
                    operation. A locked retention policy cannot be removed or shortened
                    in duration for the lifetime of the bucket. Attempting to remove
                    or decrease period of a locked retention policy will result in
                    a PERMISSION_DENIED error.'
                  properties:
                    effectiveTime:
                      description: 'EffectiveTime: Server-determined value that indicates
                        the time from which policy was enforced and effective. This
                        value is in RFC 3339 format.'
                      type: string
                    isLocked:
                      description: 'IsLocked: Once locked, an object retention policy
                        cannot be modified.'
                      type: boolean
                    retentionPeriod:
                      description: 'RetentionPeriod: The duration in seconds that
                        objects need to be retained. Retention duration must be greater
                        than zero and less than 100 years. Note that enforcement of
                        retention periods less than a day is not guaranteed. Such
                        periods should only be used for testing purposes.'
                      format: int64
                      type: integer
                  type: object
                storageClass:
                  description: 'StorageClass: The bucket''s default storage class,
                    used whenever no storageClass is specified for a newly-created
                    object. This defines how objects in the bucket are stored and
                    determines the SLA and the cost of storage. Values include MULTI_REGIONAL,
                    REGIONAL, STANDARD, NEARLINE, COLDLINE, and DURABLE_REDUCED_AVAILABILITY.
                    If this value is not specified when the bucket is created, it
                    will default to STANDARD. For more information, see storage classes.'
                  type: string
                versioning:
                  description: 'Versioning: The bucket''s versioning configuration.'
                  properties:
                    enabled:
                      description: 'Enabled: While set to true, versioning is fully
                        enabled for this bucket.'
                      type: boolean
                  required:
                  - enabled
                  type: object
                website:
                  description: 'Website: The bucket''s website configuration, controlling
                    how the service behaves when accessing bucket contents as a web
                    site. See the Static Website Examples for more information.'
                  properties:
                    mainPageSuffix:
                      description: 'MainPageSuffix: If the requested object path is
                        missing, the service will ensure the path has a trailing ''/'',
                        append this suffix, and attempt to retrieve the resulting
                        object. This allows the creation of index.html objects to
                        represent directory pages.'
                      type: string
                    notFoundPage:
                      description: 'NotFoundPage: If the requested object path is
                        missing, and any mainPageSuffix object is missing, if applicable,
                        the service will return the named object from this bucket
                        as the content for a 404 Not Found result.'
                      type: string
                  type: object
              required:
              - location
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A BucketStatus represents the observed state of a Bucket.
          properties:
            atProvider:
              description: BucketObservation represent the observed status of a Google
                Cloud Storage Bucket.
              properties:
                metageneration:
                  description: 'Metageneration: The metadata generation of this bucket.'
                  format: int64
                  type: integer
                owner:
                  description: 'Owner: The owner of the bucket. This is always the
                    project team''s owner group.'
                  properties:
                    entity:
                      description: 'Entity: The entity, in the form project-owner-projectId.'
                      type: string
                    entityId:
                      description: 'EntityId: The ID for the entity.'
                      type: string
                  type: object
                projectNumber:
                  description: 'ProjectNumber: The project number of the project the
                    bucket belongs to.'
                  format: int64
                  type: integer
                selfLink:
                  description: 'SelfLink: The URI of this bucket.'
                  type: string
                timeCreated:
                  description: 'TimeCreated: The creation time of the bucket in RFC
                    3339 format.'
                  type: string
                updated:
                  description: 'Updated: The modification time of the bucket in RFC
                    3339 format.'
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a managed resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          required:
          - atProvider
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
