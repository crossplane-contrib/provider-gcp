
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.2
  creationTimestamp: null
  name: cloudmemorystoreinstances.cache.gcp.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.bindingPhase
    name: STATUS
    type: string
  - JSONPath: .status.atProvider.state
    name: STATE
    type: string
  - JSONPath: .spec.classRef.name
    name: CLASS
    type: string
  - JSONPath: .spec.forProvider.redisVersion
    name: VERSION
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: cache.gcp.crossplane.io
  names:
    kind: CloudMemorystoreInstance
    listKind: CloudMemorystoreInstanceList
    plural: cloudmemorystoreinstances
    singular: cloudmemorystoreinstance
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A CloudMemorystoreInstance is a managed resource that represents
        a Google Cloud Memorystore instance.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A CloudMemorystoreInstanceSpec defines the desired state of
            a CloudMemorystoreInstance.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplaneio/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplaneio/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: 'CloudMemorystoreInstanceParameters define the desired
                state of an Google Cloud Memorystore instance. Most fields map directly
                to an Instance: https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance'
              properties:
                alternativeLocationId:
                  description: Only applicable to STANDARD_HA tier which protects
                    the instance against zonal failures by provisioning it across
                    two zones. If provided, it must be a different zone from the one
                    provided in [location_id].
                  type: string
                authorizedNetwork:
                  description: The full name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks)
                    to which the instance is connected. If left unspecified, the `default`
                    network will be used.
                  type: string
                displayName:
                  description: An arbitrary and optional user-provided name for the
                    instance.
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: Resource labels to represent user provided metadata
                  type: object
                locationId:
                  description: The zone where the instance will be provisioned. If
                    not provided, the service will choose a zone for the instance.
                    For STANDARD_HA tier, instances will be created across two zones
                    for protection against zonal failures. If [alternative_location_id]
                    is also provided, it must be different from [location_id].
                  type: string
                memorySizeGb:
                  description: Redis memory size in GiB.
                  format: int32
                  type: integer
                redisConfigs:
                  additionalProperties:
                    type: string
                  description: "Redis configuration parameters, according to http://redis.io/topics/config.
                    Currently, the only supported parameters are: \n  Redis 3.2 and
                    above: \n  *   maxmemory-policy  *   notify-keyspace-events \n
                    \ Redis 4.0 and above: \n  *   activedefrag  *   lfu-log-factor
                    \ *   lfu-decay-time"
                  type: object
                redisVersion:
                  description: "The version of Redis software. If not provided, latest
                    supported version will be used. Updating the version will perform
                    an upgrade/downgrade to the new version. Currently, the supported
                    values are: \n  *   `REDIS_4_0` for Redis 4.0 compatibility (default)
                    \ *   `REDIS_3_2` for Redis 3.2 compatibility"
                  type: string
                region:
                  description: Region in which to create this Cloud Memorystore cluster.
                  type: string
                reservedIpRange:
                  description: The CIDR range of internal addresses that are reserved
                    for this instance. If not provided, the service will choose an
                    unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29.
                    Ranges must be unique and non-overlapping with existing subnets
                    in an authorized network.
                  type: string
                tier:
                  description: Tier specifies the replication level of the Redis cluster.
                    BASIC provides a single Redis instance with no high availability.
                    STANDARD_HA provides a cluster of two Redis instances in distinct
                    availability zones. https://cloud.google.com/memorystore/docs/redis/redis-tiers
                  enum:
                  - BASIC
                  - STANDARD_HA
                  type: string
              required:
              - memorySizeGb
              - region
              - tier
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to the external
                resource this managed resource manages when the managed resource is
                deleted. "Delete" deletes the external resource, while "Retain" (the
                default) does not. Note this behaviour is subtly different from other
                uses of the ReclaimPolicy concept within the Kubernetes ecosystem
                per https://github.com/crossplaneio/crossplane-runtime/issues/21
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - providerRef
          type: object
        status:
          description: A CloudMemorystoreInstanceStatus represents the observed state
            of a CloudMemorystoreInstance.
          properties:
            atProvider:
              description: CloudMemorystoreInstanceObservation is used to show the
                observed state of the CloudMemorystore resource on GCP.
              properties:
                createTime:
                  description: The time the instance was created.
                  format: date-time
                  type: string
                currentLocationId:
                  description: The current zone where the Redis endpoint is placed.
                    For Basic Tier instances, this will always be the same as the
                    [location_id] provided by the user at creation time. For Standard
                    Tier instances, this can be either [location_id] or [alternative_location_id]
                    and can change after a failover event.
                  type: string
                host:
                  description: Hostname or IP address of the exposed Redis endpoint
                    used by clients to connect to the service.
                  type: string
                name:
                  description: "Unique name of the resource in this scope including
                    project and location using the form:     `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
                    \n Note: Redis instances are managed and addressed at regional
                    level so location_id here refers to a GCP region; however, users
                    may choose which specific zone (or collection of zones for cross-zone
                    instances) an instance should be provisioned in. Refer to [location_id]
                    and [alternative_location_id] fields for more details."
                  type: string
                persistenceIamIdentity:
                  description: Cloud IAM identity used by import / export operations
                    to transfer data to/from Cloud Storage. Format is "serviceAccount:<service_account_email>".
                    The value may change over time for a given instance so should
                    be checked before each import/export operation.
                  type: string
                port:
                  description: The port number of the exposed Redis endpoint.
                  format: int32
                  type: integer
                state:
                  description: The current state of this instance.
                  type: string
                statusMessage:
                  description: Additional information about the current status of
                    this instance, if available.
                  type: string
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a managed resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
