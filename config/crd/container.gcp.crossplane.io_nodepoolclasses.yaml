
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: nodepoolclasses.container.gcp.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: container.gcp.crossplane.io
  names:
    kind: NodePoolClass
    listKind: NodePoolClassList
    plural: nodepoolclasses
    singular: nodepoolclass
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A NodePoolClass is a resource class. It defines the desired spec
        of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            NodePool.
          properties:
            autoscaling:
              description: 'Autoscaling: Autoscaler configuration for this NodePool.
                Autoscaler is enabled only if a valid configuration is present.'
              properties:
                autoprovisioned:
                  description: 'Autoprovisioned: Can this node pool be deleted automatically.'
                  type: boolean
                enabled:
                  description: 'Enabled: Is autoscaling enabled for this node pool.'
                  type: boolean
                maxNodeCount:
                  description: 'MaxNodeCount: Maximum number of nodes in the NodePool.
                    Must be >= min_node_count. There has to enough quota to scale
                    up the cluster.'
                  format: int64
                  type: integer
                minNodeCount:
                  description: 'MinNodeCount: Minimum number of nodes in the NodePool.
                    Must be >= 1 and <= max_node_count.'
                  format: int64
                  type: integer
              type: object
            cluster:
              description: 'Cluster: The resource link for the GKE cluster to which
                the NodePool will attach. Must be of format projects/projectID/locations/clusterLocation/clusters/clusterName.
                Must be supplied if ClusterRef is not.'
              type: string
            clusterRef:
              description: ClusterRef sets the Cluster field by resolving the resource
                link of the referenced Crossplane GKECluster managed resource. Must
                be supplied in Cluster is not.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            config:
              description: 'Config: The node configuration of the pool.'
              properties:
                accelerators:
                  description: 'Accelerators: A list of hardware accelerators to be
                    attached to each node. See https://cloud.google.com/compute/docs/gpus
                    for more information about support for GPUs.'
                  items:
                    description: AcceleratorConfig represents a Hardware Accelerator
                      request.
                    properties:
                      acceleratorCount:
                        description: 'AcceleratorCount: The number of the accelerator
                          cards exposed to an instance.'
                        format: int64
                        type: integer
                      acceleratorType:
                        description: 'AcceleratorType: The accelerator type resource
                          name. List of supported accelerators [here](/compute/docs/gpus/#Introduction)'
                        type: string
                    type: object
                  type: array
                diskSizeGb:
                  description: "DiskSizeGb: Size of the disk attached to each node,
                    specified in GB. The smallest allowed disk size is 10GB. \n If
                    unspecified, the default disk size is 100GB."
                  format: int64
                  type: integer
                diskType:
                  description: "DiskType: Type of the disk attached to each node (e.g.
                    'pd-standard' or 'pd-ssd') \n If unspecified, the default disk
                    type is 'pd-standard'"
                  type: string
                imageType:
                  description: 'ImageType: The image type to use for this node. Note
                    that for a given image type, the latest version of it will be
                    used.'
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: 'Labels: The map of Kubernetes labels (key/value pairs)
                    to be applied to each node. These will added in addition to any
                    default label(s) that Kubernetes may apply to the node. In case
                    of conflict in label keys, the applied set may differ depending
                    on the Kubernetes version -- it''s best to assume the behavior
                    is undefined and conflicts should be avoided. For more information,
                    including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects
                    /labels/'
                  type: object
                localSsdCount:
                  description: "LocalSsdCount: The number of local SSD disks to be
                    attached to the node. \n The limit for this value is dependant
                    upon the maximum number of disks available on a machine per zone.
                    See: https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_l
                    imits for more information."
                  format: int64
                  type: integer
                machineType:
                  description: "MachineType: The name of a Google Compute Engine [machine
                    type](/compute/docs/machine-types) (e.g. `n1-standard-1`). \n
                    If unspecified, the default machine type is `n1-standard-1`."
                  type: string
                metadata:
                  additionalProperties:
                    type: string
                  description: "Metadata: The metadata key/value pairs assigned to
                    instances in the cluster. \n Keys must conform to the regexp [a-zA-Z0-9-_]+
                    and be less than 128 bytes in length. These are reflected as part
                    of a URL in the metadata server. Additionally, to avoid ambiguity,
                    keys must not conflict with any other metadata keys for the project
                    or be one of the reserved keys:  \"cluster-location\"  \"cluster-name\"
                    \ \"cluster-uid\"  \"configure-sh\"  \"containerd-configure-sh\"
                    \ \"enable-oslogin\"  \"gci-ensure-gke-docker\"  \"gci-update-strategy\"
                    \ \"instance-template\"  \"kube-env\"  \"startup-script\"  \"user-data\"
                    \ \"disable-address-manager\"  \"windows-startup-script-ps1\"
                    \ \"common-psm1\"  \"k8s-node-setup-psm1\"  \"install-ssh-psm1\"
                    \ \"user-profile-psm1\"  \"serial-port-logging-enable\" Values
                    are free-form strings, and only have meaning as interpreted by
                    the image running in the instance. The only restriction placed
                    on them is that each value's size must be less than or equal to
                    32 KB. \n The total size of all keys and values must be less than
                    512 KB."
                  type: object
                minCpuPlatform:
                  description: 'MinCpuPlatform: Minimum CPU platform to be used by
                    this instance. The instance may be scheduled on the specified
                    or newer CPU platform. Applicable values are the friendly names
                    of CPU platforms, such as <code>minCpuPlatform: &quot;Intel Haswell&quot;</code>
                    or <code>minCpuPlatform: &quot;Intel Sandy Bridge&quot;</code>.
                    For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-
                    min-cpu-platform)'
                  type: string
                oauthScopes:
                  description: "OauthScopes: The set of Google API scopes to be made
                    available on all of the node VMs under the \"default\" service
                    account. \n The following scopes are recommended, but not required,
                    and by default are not included: \n * `https://www.googleapis.com/auth/compute`
                    is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only`
                    is required for communicating with **gcr.io** (the [Google Container
                    Registry](/container-registry/)). \n If unspecified, no scopes
                    are added, unless Cloud Logging or Cloud Monitoring are enabled,
                    in which case their required scopes will be added."
                  items:
                    type: string
                  type: array
                preemptible:
                  description: 'Preemptible: Whether the nodes are created as preemptible
                    VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible
                    for more inforamtion about preemptible VM instances.'
                  type: boolean
                sandboxConfig:
                  description: 'SandboxConfig: Sandbox configuration for this node.'
                  properties:
                    sandboxType:
                      description: 'SandboxType: Type of the sandbox to use for the
                        node (e.g. ''gvisor'')'
                      type: string
                  required:
                  - sandboxType
                  type: object
                serviceAccount:
                  description: 'ServiceAccount: The Google Cloud Platform Service
                    Account to be used by the node VMs. If no Service Account is specified,
                    the "default" service account is used.'
                  type: string
                shieldedInstanceConfig:
                  description: 'ShieldedInstanceConfig: Shielded Instance options.'
                  properties:
                    enableIntegrityMonitoring:
                      description: "EnableIntegrityMonitoring: Defines whether the
                        instance has integrity monitoring enabled. \n Enables monitoring
                        and attestation of the boot integrity of the instance. The
                        attestation is performed against the integrity policy baseline.
                        This baseline is initially derived from the implicitly trusted
                        boot image when the instance is created."
                      type: boolean
                    enableSecureBoot:
                      description: "EnableSecureBoot: Defines whether the instance
                        has Secure Boot enabled. \n Secure Boot helps ensure that
                        the system only runs authentic software by verifying the digital
                        signature of all boot components, and halting the boot process
                        if signature verification fails."
                      type: boolean
                  type: object
                tags:
                  description: 'Tags: The list of instance tags applied to all nodes.
                    Tags are used to identify valid sources or targets for network
                    firewalls and are specified by the client during cluster or node
                    pool creation. Each tag within the list must comply with RFC1035.'
                  items:
                    type: string
                  type: array
                taints:
                  description: "Taints: List of kubernetes taints to be applied to
                    each node. \n For more information, including usage and the valid
                    values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toler
                    ation/"
                  items:
                    description: "NodeTaint is a Kubernetes taint is comprised of
                      three fields: key, value, and effect. Effect can only be one
                      of three types:  NoSchedule, PreferNoSchedule or NoExecute.
                      \n For more information, including usage and the valid values,
                      see: https://kubernetes.io/docs/concepts/configuration/taint-and-toler
                      ation/"
                    properties:
                      effect:
                        description: "Effect: Effect for taint. \n Possible values:
                          \  \"EFFECT_UNSPECIFIED\" - Not set   \"NO_SCHEDULE\" -
                          NoSchedule   \"PREFER_NO_SCHEDULE\" - PreferNoSchedule   \"NO_EXECUTE\"
                          - NoExecute"
                        type: string
                      key:
                        description: 'Key: Key for taint.'
                        type: string
                      value:
                        description: 'Value: Value for taint.'
                        type: string
                    required:
                    - effect
                    - key
                    - value
                    type: object
                  type: array
                workloadMetadataConfig:
                  description: 'WorkloadMetadataConfig: The workload metadata configuration
                    for this node.'
                  properties:
                    nodeMetadata:
                      description: "NodeMetadata: NodeMetadata is the configuration
                        for how to expose metadata to the workloads running on the
                        node. \n Possible values:   \"UNSPECIFIED\" - Not set.   \"SECURE\"
                        - Prevent workloads not in hostGKECluster from accessing certain
                        VM metadata, specifically kube-env, which contains Kubelet
                        credentials, and the instance identity token. \n Metadata
                        concealment is a temporary security solution available while
                        the bootstrapping process for cluster nodes is being redesigned
                        with significant security improvements.  This feature is scheduled
                        to be deprecated in the future and later removed.   \"EXPOSE\"
                        - Expose all VM metadata to pods.   \"GKE_METADATA_SERVER\"
                        - Run the GKE Metadata Server on this node. The GKE Metadata
                        Server exposes a metadata API to workloads that is compatible
                        with the V1 Compute Metadata APIs exposed by the Compute Engine
                        and App Engine Metadata Servers. This feature can only be
                        enabled if Workload Identity is enabled at the cluster level."
                      type: string
                  required:
                  - nodeMetadata
                  type: object
              type: object
            initialNodeCount:
              description: 'InitialNodeCount: The initial node count for the pool.
                You must ensure that your Compute Engine <a href="/compute/docs/resource-quotas">resource
                quota</a> is sufficient for this number of instances. You must also
                have available firewall and routes quota.'
              format: int64
              type: integer
            locations:
              description: 'Locations: The list of Google Compute Engine [zones](/compute/docs/zones#available)
                in which the NodePool''s nodes should be located.'
              items:
                type: string
              type: array
            management:
              description: 'Management: NodeManagement configuration for this NodePool.'
              properties:
                autoRepair:
                  description: 'AutoRepair: Whether the nodes will be automatically
                    repaired.'
                  type: boolean
                autoUpgrade:
                  description: 'AutoUpgrade: Whether the nodes will be automatically
                    upgraded.'
                  type: boolean
              type: object
            maxPodsConstraint:
              description: 'MaxPodsConstraint: The constraint on the maximum number
                of pods that can be run simultaneously on a node in the node pool.'
              properties:
                maxPodsPerNode:
                  description: 'MaxPodsPerNode: Constraint enforced on the max num
                    of pods per node.'
                  format: int64
                  type: integer
              required:
              - maxPodsPerNode
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            version:
              description: 'Version: The version of the Kubernetes of this node.'
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
