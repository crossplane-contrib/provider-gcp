//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha2

import (
	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggregationsObservation) DeepCopyInto(out *AggregationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggregationsObservation.
func (in *AggregationsObservation) DeepCopy() *AggregationsObservation {
	if in == nil {
		return nil
	}
	out := new(AggregationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AggregationsParameters) DeepCopyInto(out *AggregationsParameters) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AggregationsParameters.
func (in *AggregationsParameters) DeepCopy() *AggregationsParameters {
	if in == nil {
		return nil
	}
	out := new(AggregationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicy) DeepCopyInto(out *AlertPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicy.
func (in *AlertPolicy) DeepCopy() *AlertPolicy {
	if in == nil {
		return nil
	}
	out := new(AlertPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyList) DeepCopyInto(out *AlertPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyList.
func (in *AlertPolicyList) DeepCopy() *AlertPolicyList {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyObservation) DeepCopyInto(out *AlertPolicyObservation) {
	*out = *in
	if in.CreationRecord != nil {
		in, out := &in.CreationRecord, &out.CreationRecord
		*out = make([]CreationRecordObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyObservation.
func (in *AlertPolicyObservation) DeepCopy() *AlertPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyParameters) DeepCopyInto(out *AlertPolicyParameters) {
	*out = *in
	if in.Combiner != nil {
		in, out := &in.Combiner, &out.Combiner
		*out = new(string)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ConditionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Documentation != nil {
		in, out := &in.Documentation, &out.Documentation
		*out = make([]DocumentationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.NotificationChannels != nil {
		in, out := &in.NotificationChannels, &out.NotificationChannels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyParameters.
func (in *AlertPolicyParameters) DeepCopy() *AlertPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicySpec) DeepCopyInto(out *AlertPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicySpec.
func (in *AlertPolicySpec) DeepCopy() *AlertPolicySpec {
	if in == nil {
		return nil
	}
	out := new(AlertPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyStatus) DeepCopyInto(out *AlertPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyStatus.
func (in *AlertPolicyStatus) DeepCopy() *AlertPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthInfoObservation) DeepCopyInto(out *AuthInfoObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthInfoObservation.
func (in *AuthInfoObservation) DeepCopy() *AuthInfoObservation {
	if in == nil {
		return nil
	}
	out := new(AuthInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthInfoParameters) DeepCopyInto(out *AuthInfoParameters) {
	*out = *in
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthInfoParameters.
func (in *AuthInfoParameters) DeepCopy() *AuthInfoParameters {
	if in == nil {
		return nil
	}
	out := new(AuthInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionAbsentObservation) DeepCopyInto(out *ConditionAbsentObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionAbsentObservation.
func (in *ConditionAbsentObservation) DeepCopy() *ConditionAbsentObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionAbsentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionAbsentParameters) DeepCopyInto(out *ConditionAbsentParameters) {
	*out = *in
	if in.Aggregations != nil {
		in, out := &in.Aggregations, &out.Aggregations
		*out = make([]AggregationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]TriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionAbsentParameters.
func (in *ConditionAbsentParameters) DeepCopy() *ConditionAbsentParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionAbsentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageObservation) DeepCopyInto(out *ConditionMonitoringQueryLanguageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageObservation.
func (in *ConditionMonitoringQueryLanguageObservation) DeepCopy() *ConditionMonitoringQueryLanguageObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageParameters) DeepCopyInto(out *ConditionMonitoringQueryLanguageParameters) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ConditionMonitoringQueryLanguageTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageParameters.
func (in *ConditionMonitoringQueryLanguageParameters) DeepCopy() *ConditionMonitoringQueryLanguageParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageTriggerObservation) DeepCopyInto(out *ConditionMonitoringQueryLanguageTriggerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageTriggerObservation.
func (in *ConditionMonitoringQueryLanguageTriggerObservation) DeepCopy() *ConditionMonitoringQueryLanguageTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionMonitoringQueryLanguageTriggerParameters) DeepCopyInto(out *ConditionMonitoringQueryLanguageTriggerParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionMonitoringQueryLanguageTriggerParameters.
func (in *ConditionMonitoringQueryLanguageTriggerParameters) DeepCopy() *ConditionMonitoringQueryLanguageTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionMonitoringQueryLanguageTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdAggregationsObservation) DeepCopyInto(out *ConditionThresholdAggregationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdAggregationsObservation.
func (in *ConditionThresholdAggregationsObservation) DeepCopy() *ConditionThresholdAggregationsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdAggregationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdAggregationsParameters) DeepCopyInto(out *ConditionThresholdAggregationsParameters) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdAggregationsParameters.
func (in *ConditionThresholdAggregationsParameters) DeepCopy() *ConditionThresholdAggregationsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdAggregationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdObservation) DeepCopyInto(out *ConditionThresholdObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdObservation.
func (in *ConditionThresholdObservation) DeepCopy() *ConditionThresholdObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdParameters) DeepCopyInto(out *ConditionThresholdParameters) {
	*out = *in
	if in.Aggregations != nil {
		in, out := &in.Aggregations, &out.Aggregations
		*out = make([]ConditionThresholdAggregationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Comparison != nil {
		in, out := &in.Comparison, &out.Comparison
		*out = new(string)
		**out = **in
	}
	if in.DenominatorAggregations != nil {
		in, out := &in.DenominatorAggregations, &out.DenominatorAggregations
		*out = make([]DenominatorAggregationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DenominatorFilter != nil {
		in, out := &in.DenominatorFilter, &out.DenominatorFilter
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.ThresholdValue != nil {
		in, out := &in.ThresholdValue, &out.ThresholdValue
		*out = new(float64)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = make([]ConditionThresholdTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdParameters.
func (in *ConditionThresholdParameters) DeepCopy() *ConditionThresholdParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdTriggerObservation) DeepCopyInto(out *ConditionThresholdTriggerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdTriggerObservation.
func (in *ConditionThresholdTriggerObservation) DeepCopy() *ConditionThresholdTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionThresholdTriggerParameters) DeepCopyInto(out *ConditionThresholdTriggerParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionThresholdTriggerParameters.
func (in *ConditionThresholdTriggerParameters) DeepCopy() *ConditionThresholdTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionThresholdTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsObservation) DeepCopyInto(out *ConditionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsObservation.
func (in *ConditionsObservation) DeepCopy() *ConditionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConditionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionsParameters) DeepCopyInto(out *ConditionsParameters) {
	*out = *in
	if in.ConditionAbsent != nil {
		in, out := &in.ConditionAbsent, &out.ConditionAbsent
		*out = make([]ConditionAbsentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionMonitoringQueryLanguage != nil {
		in, out := &in.ConditionMonitoringQueryLanguage, &out.ConditionMonitoringQueryLanguage
		*out = make([]ConditionMonitoringQueryLanguageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConditionThreshold != nil {
		in, out := &in.ConditionThreshold, &out.ConditionThreshold
		*out = make([]ConditionThresholdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionsParameters.
func (in *ConditionsParameters) DeepCopy() *ConditionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConditionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentMatchersObservation) DeepCopyInto(out *ContentMatchersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentMatchersObservation.
func (in *ContentMatchersObservation) DeepCopy() *ContentMatchersObservation {
	if in == nil {
		return nil
	}
	out := new(ContentMatchersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContentMatchersParameters) DeepCopyInto(out *ContentMatchersParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Matcher != nil {
		in, out := &in.Matcher, &out.Matcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContentMatchersParameters.
func (in *ContentMatchersParameters) DeepCopy() *ContentMatchersParameters {
	if in == nil {
		return nil
	}
	out := new(ContentMatchersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreationRecordObservation) DeepCopyInto(out *CreationRecordObservation) {
	*out = *in
	if in.MutateTime != nil {
		in, out := &in.MutateTime, &out.MutateTime
		*out = new(string)
		**out = **in
	}
	if in.MutatedBy != nil {
		in, out := &in.MutatedBy, &out.MutatedBy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreationRecordObservation.
func (in *CreationRecordObservation) DeepCopy() *CreationRecordObservation {
	if in == nil {
		return nil
	}
	out := new(CreationRecordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreationRecordParameters) DeepCopyInto(out *CreationRecordParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreationRecordParameters.
func (in *CreationRecordParameters) DeepCopy() *CreationRecordParameters {
	if in == nil {
		return nil
	}
	out := new(CreationRecordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenominatorAggregationsObservation) DeepCopyInto(out *DenominatorAggregationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenominatorAggregationsObservation.
func (in *DenominatorAggregationsObservation) DeepCopy() *DenominatorAggregationsObservation {
	if in == nil {
		return nil
	}
	out := new(DenominatorAggregationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenominatorAggregationsParameters) DeepCopyInto(out *DenominatorAggregationsParameters) {
	*out = *in
	if in.AlignmentPeriod != nil {
		in, out := &in.AlignmentPeriod, &out.AlignmentPeriod
		*out = new(string)
		**out = **in
	}
	if in.CrossSeriesReducer != nil {
		in, out := &in.CrossSeriesReducer, &out.CrossSeriesReducer
		*out = new(string)
		**out = **in
	}
	if in.GroupByFields != nil {
		in, out := &in.GroupByFields, &out.GroupByFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PerSeriesAligner != nil {
		in, out := &in.PerSeriesAligner, &out.PerSeriesAligner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenominatorAggregationsParameters.
func (in *DenominatorAggregationsParameters) DeepCopy() *DenominatorAggregationsParameters {
	if in == nil {
		return nil
	}
	out := new(DenominatorAggregationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationObservation) DeepCopyInto(out *DocumentationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationObservation.
func (in *DocumentationObservation) DeepCopy() *DocumentationObservation {
	if in == nil {
		return nil
	}
	out := new(DocumentationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationParameters) DeepCopyInto(out *DocumentationParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.MimeType != nil {
		in, out := &in.MimeType, &out.MimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationParameters.
func (in *DocumentationParameters) DeepCopy() *DocumentationParameters {
	if in == nil {
		return nil
	}
	out := new(DocumentationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCheckObservation) DeepCopyInto(out *HTTPCheckObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCheckObservation.
func (in *HTTPCheckObservation) DeepCopy() *HTTPCheckObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCheckParameters) DeepCopyInto(out *HTTPCheckParameters) {
	*out = *in
	if in.AuthInfo != nil {
		in, out := &in.AuthInfo, &out.AuthInfo
		*out = make([]AuthInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MaskHeaders != nil {
		in, out := &in.MaskHeaders, &out.MaskHeaders
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.RequestMethod != nil {
		in, out := &in.RequestMethod, &out.RequestMethod
		*out = new(string)
		**out = **in
	}
	if in.UseSSL != nil {
		in, out := &in.UseSSL, &out.UseSSL
		*out = new(bool)
		**out = **in
	}
	if in.ValidateSSL != nil {
		in, out := &in.ValidateSSL, &out.ValidateSSL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCheckParameters.
func (in *HTTPCheckParameters) DeepCopy() *HTTPCheckParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoredResourceObservation) DeepCopyInto(out *MonitoredResourceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoredResourceObservation.
func (in *MonitoredResourceObservation) DeepCopy() *MonitoredResourceObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoredResourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoredResourceParameters) DeepCopyInto(out *MonitoredResourceParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoredResourceParameters.
func (in *MonitoredResourceParameters) DeepCopy() *MonitoredResourceParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoredResourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannel) DeepCopyInto(out *NotificationChannel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannel.
func (in *NotificationChannel) DeepCopy() *NotificationChannel {
	if in == nil {
		return nil
	}
	out := new(NotificationChannel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationChannel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelList) DeepCopyInto(out *NotificationChannelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotificationChannel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelList.
func (in *NotificationChannelList) DeepCopy() *NotificationChannelList {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationChannelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelObservation) DeepCopyInto(out *NotificationChannelObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VerificationStatus != nil {
		in, out := &in.VerificationStatus, &out.VerificationStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelObservation.
func (in *NotificationChannelObservation) DeepCopy() *NotificationChannelObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelParameters) DeepCopyInto(out *NotificationChannelParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SensitiveLabels != nil {
		in, out := &in.SensitiveLabels, &out.SensitiveLabels
		*out = make([]SensitiveLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserLabels != nil {
		in, out := &in.UserLabels, &out.UserLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelParameters.
func (in *NotificationChannelParameters) DeepCopy() *NotificationChannelParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelSpec) DeepCopyInto(out *NotificationChannelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelSpec.
func (in *NotificationChannelSpec) DeepCopy() *NotificationChannelSpec {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationChannelStatus) DeepCopyInto(out *NotificationChannelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationChannelStatus.
func (in *NotificationChannelStatus) DeepCopy() *NotificationChannelStatus {
	if in == nil {
		return nil
	}
	out := new(NotificationChannelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceGroupObservation) DeepCopyInto(out *ResourceGroupObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceGroupObservation.
func (in *ResourceGroupObservation) DeepCopy() *ResourceGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceGroupParameters) DeepCopyInto(out *ResourceGroupParameters) {
	*out = *in
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceGroupParameters.
func (in *ResourceGroupParameters) DeepCopy() *ResourceGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SensitiveLabelsObservation) DeepCopyInto(out *SensitiveLabelsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SensitiveLabelsObservation.
func (in *SensitiveLabelsObservation) DeepCopy() *SensitiveLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(SensitiveLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SensitiveLabelsParameters) DeepCopyInto(out *SensitiveLabelsParameters) {
	*out = *in
	if in.AuthTokenSecretRef != nil {
		in, out := &in.AuthTokenSecretRef, &out.AuthTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ServiceKeySecretRef != nil {
		in, out := &in.ServiceKeySecretRef, &out.ServiceKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SensitiveLabelsParameters.
func (in *SensitiveLabelsParameters) DeepCopy() *SensitiveLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(SensitiveLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPCheckObservation) DeepCopyInto(out *TCPCheckObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPCheckObservation.
func (in *TCPCheckObservation) DeepCopy() *TCPCheckObservation {
	if in == nil {
		return nil
	}
	out := new(TCPCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPCheckParameters) DeepCopyInto(out *TCPCheckParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPCheckParameters.
func (in *TCPCheckParameters) DeepCopy() *TCPCheckParameters {
	if in == nil {
		return nil
	}
	out := new(TCPCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerObservation) DeepCopyInto(out *TriggerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerObservation.
func (in *TriggerObservation) DeepCopy() *TriggerObservation {
	if in == nil {
		return nil
	}
	out := new(TriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerParameters) DeepCopyInto(out *TriggerParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerParameters.
func (in *TriggerParameters) DeepCopy() *TriggerParameters {
	if in == nil {
		return nil
	}
	out := new(TriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfig) DeepCopyInto(out *UptimeCheckConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfig.
func (in *UptimeCheckConfig) DeepCopy() *UptimeCheckConfig {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UptimeCheckConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigList) DeepCopyInto(out *UptimeCheckConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UptimeCheckConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigList.
func (in *UptimeCheckConfigList) DeepCopy() *UptimeCheckConfigList {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UptimeCheckConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigObservation) DeepCopyInto(out *UptimeCheckConfigObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UptimeCheckID != nil {
		in, out := &in.UptimeCheckID, &out.UptimeCheckID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigObservation.
func (in *UptimeCheckConfigObservation) DeepCopy() *UptimeCheckConfigObservation {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigParameters) DeepCopyInto(out *UptimeCheckConfigParameters) {
	*out = *in
	if in.ContentMatchers != nil {
		in, out := &in.ContentMatchers, &out.ContentMatchers
		*out = make([]ContentMatchersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.HTTPCheck != nil {
		in, out := &in.HTTPCheck, &out.HTTPCheck
		*out = make([]HTTPCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitoredResource != nil {
		in, out := &in.MonitoredResource, &out.MonitoredResource
		*out = make([]MonitoredResourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = make([]ResourceGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelectedRegions != nil {
		in, out := &in.SelectedRegions, &out.SelectedRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TCPCheck != nil {
		in, out := &in.TCPCheck, &out.TCPCheck
		*out = make([]TCPCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigParameters.
func (in *UptimeCheckConfigParameters) DeepCopy() *UptimeCheckConfigParameters {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigSpec) DeepCopyInto(out *UptimeCheckConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigSpec.
func (in *UptimeCheckConfigSpec) DeepCopy() *UptimeCheckConfigSpec {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UptimeCheckConfigStatus) DeepCopyInto(out *UptimeCheckConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UptimeCheckConfigStatus.
func (in *UptimeCheckConfigStatus) DeepCopy() *UptimeCheckConfigStatus {
	if in == nil {
		return nil
	}
	out := new(UptimeCheckConfigStatus)
	in.DeepCopyInto(out)
	return out
}
