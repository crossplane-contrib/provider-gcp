
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: backendservices.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: BackendService
    listKind: BackendServiceList
    plural: backendservices
    singular: backendservice
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A BackendService is a managed resource that represents a Google Compute Engine VPC BackendService.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A BackendServiceSpec defines the desired state of a BackendService.
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'BackendServiceParameters define the desired state of a Google Compute Engine VPC BackendService. Most fields map directly to a BackendService: https://cloud.google.com/compute/docs/reference/rest/v1/networks'
                properties:
                  affinityCookieTtlSec:
                    description: 'AffinityCookieTtlSec: If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value is one day (86,400).'
                    format: int64
                    type: integer
                  backends:
                    description: 'Backends: The list of backends that serve this BackendService.'
                    items:
                      description: Backend is a message containing information of one individual backend.
                      properties:
                        balancingMode:
                          description: "BalancingMode: Specifies the balancing mode for the backend. \n When choosing a balancing mode, you need to consider the loadBalancingScheme, and protocol for the backend service, as well as the type of backend (instance group or NEG). \n - If the load balancing mode is CONNECTION, then the load is spread based on how many concurrent connections the backend can handle. You can use the CONNECTION balancing mode if the protocol for the backend service is SSL, TCP, or UDP. \n If the loadBalancingScheme for the backend service is EXTERNAL (SSL Proxy and TCP Proxy load balancers), you must also specify exactly one of the following parameters: maxConnections (except for regional managed instance groups), maxConnectionsPerInstance, or maxConnectionsPerEndpoint. \n If the loadBalancingScheme for the backend service is INTERNAL (internal TCP/UDP load balancers), you cannot specify any additional parameters. \n - If the load balancing mode is RATE, the load is spread based on the rate of HTTP requests per second (RPS). You can use the RATE balancing mode if the protocol for the backend service is HTTP or HTTPS. You must specify exactly one of the following parameters: maxRate (except for regional managed instance groups), maxRatePerInstance, or maxRatePerEndpoint. \n - If the load balancing mode is UTILIZATION, the load is spread based on the backend utilization of instances in an instance group. You can use the UTILIZATION balancing mode if the loadBalancingScheme of the backend service is EXTERNAL, INTERNAL_SELF_MANAGED, or INTERNAL_MANAGED and the backends are instance groups. There are no restrictions on the backend service protocol. \n Possible values:   \"CONNECTION\"   \"RATE\"   \"UTILIZATION\""
                          type: string
                        capacityScaler:
                          anyOf:
                          - type: integer
                          - type: string
                          description: "CapacityScaler: A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0]. \n This cannot be used for internal load balancing."
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description:
                          description: 'Description: An optional description of this resource. Provide this property when you create the resource.'
                          type: string
                        failover:
                          description: 'Failover: This field designates whether this is a failover backend. More than one failover backend can be configured for a given BackendService.'
                          type: boolean
                        group:
                          description: "Group: The fully-qualified URL of an instance group or network endpoint group (NEG) resource. The type of backend that a backend service supports depends on the backend service's loadBalancingScheme. \n - When the loadBalancingScheme for the backend service is EXTERNAL, INTERNAL_SELF_MANAGED, or INTERNAL_MANAGED, the backend can be either an instance group or a NEG. The backends on the backend service must be either all instance groups or all NEGs. You cannot mix instance group and NEG backends on the same backend service. \n - When the loadBalancingScheme for the backend service is INTERNAL, the backend must be an instance group in the same region as the backend service. NEGs are not supported. \n You must use the fully-qualified URL (starting with https://www.googleapis.com/) to specify the instance group or NEG. Partial URLs are not supported."
                          type: string
                        maxConnections:
                          description: "MaxConnections: Defines a target maximum number of simultaneous connections that the backend can handle. Valid for network endpoint group and instance group backends (except for regional managed instance groups). If the backend's balancingMode is UTILIZATION, this is an optional parameter. If the backend's balancingMode is CONNECTION, and backend is attached to a backend service whose loadBalancingScheme is EXTERNAL, you must specify either this parameter, maxConnectionsPerInstance, or maxConnectionsPerEndpoint. \n Not available if the backend's balancingMode is RATE. If the loadBalancingScheme is INTERNAL, then maxConnections is not supported, even though the backend requires a balancing mode of CONNECTION."
                          format: int64
                          type: integer
                        maxConnectionsPerEndpoint:
                          description: "MaxConnectionsPerEndpoint: Defines a target maximum number of simultaneous connections for an endpoint of a NEG. This is multiplied by the number of endpoints in the NEG to implicitly calculate a maximum number of target maximum simultaneous connections for the NEG. If the backend's balancingMode is CONNECTION, and the backend is attached to a backend service whose loadBalancingScheme is EXTERNAL, you must specify either this parameter, maxConnections, or maxConnectionsPerInstance. \n Not available if the backend's balancingMode is RATE. Internal TCP/UDP load balancing does not support setting maxConnectionsPerEndpoint even though its backends require a balancing mode of CONNECTION."
                          format: int64
                          type: integer
                        maxConnectionsPerInstance:
                          description: "MaxConnectionsPerInstance: Defines a target maximum number of simultaneous connections for a single VM in a backend instance group. This is multiplied by the number of instances in the instance group to implicitly calculate a target maximum number of simultaneous connections for the whole instance group. If the backend's balancingMode is UTILIZATION, this is an optional parameter. If the backend's balancingMode is CONNECTION, and backend is attached to a backend service whose loadBalancingScheme is EXTERNAL, you must specify either this parameter, maxConnections, or maxConnectionsPerEndpoint. \n Not available if the backend's balancingMode is RATE. Internal TCP/UDP load balancing does not support setting maxConnectionsPerInstance even though its backends require a balancing mode of CONNECTION."
                          format: int64
                          type: integer
                        maxRate:
                          description: "MaxRate: Defines a maximum number of HTTP requests per second (RPS) that the backend can handle. Valid for network endpoint group and instance group backends (except for regional managed instance groups). Must not be defined if the backend is a managed instance group that uses autoscaling based on load balancing. \n If the backend's balancingMode is UTILIZATION, this is an optional parameter. If the backend's balancingMode is RATE, you must specify maxRate, maxRatePerInstance, or maxRatePerEndpoint. \n Not available if the backend's balancingMode is CONNECTION."
                          format: int64
                          type: integer
                        maxRatePerEndpoint:
                          anyOf:
                          - type: integer
                          - type: string
                          description: "MaxRatePerEndpoint: Defines a maximum target for requests per second (RPS) for an endpoint of a NEG. This is multiplied by the number of endpoints in the NEG to implicitly calculate a target maximum rate for the NEG. \n If the backend's balancingMode is RATE, you must specify either this parameter, maxRate (except for regional managed instance groups), or maxRatePerInstance. \n Not available if the backend's balancingMode is CONNECTION."
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        maxRatePerInstance:
                          anyOf:
                          - type: integer
                          - type: string
                          description: "MaxRatePerInstance: Defines a maximum target for requests per second (RPS) for a single VM in a backend instance group. This is multiplied by the number of instances in the instance group to implicitly calculate a target maximum rate for the whole instance group. \n If the backend's balancingMode is UTILIZATION, this is an optional parameter. If the backend's balancingMode is RATE, you must specify either this parameter, maxRate (except for regional managed instance groups), or maxRatePerEndpoint. \n Not available if the backend's balancingMode is CONNECTION."
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        maxUtilization:
                          anyOf:
                          - type: integer
                          - type: string
                          description: "MaxUtilization: Defines the maximum average backend utilization of a backend VM in an instance group. The valid range is [0.0, 1.0]. This is an optional parameter if the backend's balancingMode is UTILIZATION. \n This parameter can be used in conjunction with maxRate, maxRatePerInstance, maxConnections (except for regional managed instance groups), or maxConnectionsPerInstance."
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    type: array
                  cdnPolicy:
                    description: 'CdnPolicy: Cloud CDN configuration for this BackendService.'
                    properties:
                      cacheKeyPolicy:
                        description: 'CacheKeyPolicy: The CacheKeyPolicy for this CdnPolicy.'
                        properties:
                          includeHost:
                            description: 'IncludeHost: If true, requests to different hosts will be cached separately.'
                            type: boolean
                          includeProtocol:
                            description: 'IncludeProtocol: If true, http and https requests will be cached separately.'
                            type: boolean
                          includeQueryString:
                            description: 'IncludeQueryString: If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.'
                            type: boolean
                          queryStringBlacklist:
                            description: 'QueryStringBlacklist: Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. ''&'' and ''='' will be percent encoded and not treated as delimiters.'
                            items:
                              type: string
                            type: array
                          queryStringWhitelist:
                            description: 'QueryStringWhitelist: Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. ''&'' and ''='' will be percent encoded and not treated as delimiters.'
                            items:
                              type: string
                            type: array
                        type: object
                      signedUrlCacheMaxAgeSec:
                        description: 'SignedUrlCacheMaxAgeSec: Maximum number of seconds the response to a signed URL request will be considered fresh. After this time period, the response will be revalidated before being served. Defaults to 1hr (3600s). When serving responses to signed URL requests, Cloud CDN will internally behave as though all responses from this backend had a "Cache-Control: public, max-age=[TTL]" header, regardless of any existing Cache-Control header. The actual headers served in responses will not be altered.'
                        format: int64
                        type: integer
                      signedUrlKeyNames:
                        description: 'SignedUrlKeyNames: [Output Only] Names of the keys for signing request URLs.'
                        items:
                          type: string
                        type: array
                    type: object
                  circuitBreakers:
                    description: "CircuitBreakers: Settings controlling the volume of connections to a backend service. If not set, this feature is considered disabled. \n This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. \n - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED."
                    properties:
                      maxConnections:
                        description: 'MaxConnections: The maximum number of connections to the backend service. If not specified, there is no limit.'
                        format: int64
                        type: integer
                      maxPendingRequests:
                        description: 'MaxPendingRequests: The maximum number of pending requests allowed to the backend service. If not specified, there is no limit.'
                        format: int64
                        type: integer
                      maxRequests:
                        description: 'MaxRequests: The maximum number of parallel requests that allowed to the backend service. If not specified, there is no limit.'
                        format: int64
                        type: integer
                      maxRequestsPerConnection:
                        description: 'MaxRequestsPerConnection: Maximum requests for a single connection to the backend service. This parameter is respected by both the HTTP/1.1 and HTTP/2 implementations. If not specified, there is no limit. Setting this parameter to 1 will effectively disable keep alive.'
                        format: int64
                        type: integer
                      maxRetries:
                        description: 'MaxRetries: The maximum number of parallel retries allowed to the backend cluster. If not specified, the default is 1.'
                        format: int64
                        type: integer
                    type: object
                  connectionDraining:
                    description: ConnectionDraining is a message containing connection draining configuration.
                    properties:
                      drainingTimeoutSec:
                        description: 'DrainingTimeoutSec: The amount of time in seconds to allow existing connections to persist while on unhealthy backend VMs. Only applicable if the protocol is not UDP. The valid range is [0, 3600].'
                        format: int64
                        type: integer
                    type: object
                  consistentHash:
                    description: "ConsistentHash: Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular destination host will be lost when one or more hosts are added/removed from the destination service. This field specifies parameters that control consistent hashing. This field is only applicable when localityLbPolicy is set to MAGLEV or RING_HASH. \n This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. \n - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED."
                    properties:
                      httpCookie:
                        description: 'HttpCookie: Hash is based on HTTP Cookie. This field describes a HTTP cookie that will be used as the hash key for the consistent hash load balancer. If the cookie is not present, it will be generated. This field is applicable if the sessionAffinity is set to HTTP_COOKIE.'
                        properties:
                          name:
                            description: 'Name: Name of the cookie.'
                            type: string
                          path:
                            description: 'Path: Path to set for the cookie.'
                            type: string
                          ttl:
                            description: 'Ttl: Lifetime of the cookie.'
                            properties:
                              nanos:
                                description: 'Nanos: Span of time that''s a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.'
                                format: int64
                                type: integer
                              seconds:
                                description: 'Seconds: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                                format: int64
                                type: integer
                            type: object
                        type: object
                      httpHeaderName:
                        description: 'HttpHeaderName: The hash based on the value of the specified header field. This field is applicable if the sessionAffinity is set to HEADER_FIELD.'
                        type: string
                      minimumRingSize:
                        description: 'MinimumRingSize: The minimum number of virtual nodes to use for the hash ring. Defaults to 1024. Larger ring sizes result in more granular load distributions. If the number of hosts in the load balancing pool is larger than the ring size, each host will be assigned a single virtual node.'
                        format: int64
                        type: integer
                    type: object
                  customRequestHeaders:
                    description: 'CustomRequestHeaders: Headers that the HTTP/S load balancer should add to proxied requests.'
                    items:
                      type: string
                    type: array
                  description:
                    description: 'Description: An optional description of this resource. Provide this property when you create the resource.'
                    type: string
                  enableCDN:
                    description: 'EnableCDN: If true, enables Cloud CDN for the backend service. Only applicable if the loadBalancingScheme is EXTERNAL and the protocol is HTTP or HTTPS.'
                    type: boolean
                  failoverPolicy:
                    description: 'FailoverPolicy: Applicable only to Failover for Internal TCP/UDP Load Balancing. Requires at least one backend instance group to be defined as a backup (failover) backend.'
                    properties:
                      disableConnectionDrainOnFailover:
                        description: "DisableConnectionDrainOnFailover: This can be set to true only if the protocol is TCP. \n The default is false."
                        type: boolean
                      dropTrafficIfUnhealthy:
                        description: "DropTrafficIfUnhealthy: Applicable only to Failover for Internal TCP/UDP Load Balancing. If set to true, connections to the load balancer are dropped when all primary and all backup backend VMs are unhealthy. If set to false, connections are distributed among all primary VMs when all primary and all backup backend VMs are unhealthy. \n The default is false."
                        type: boolean
                      failoverRatio:
                        anyOf:
                        - type: integer
                        - type: string
                        description: 'FailoverRatio: Applicable only to Failover for Internal TCP/UDP Load Balancing. The value of the field must be in the range [0, 1]. If the value is 0, the load balancer performs a failover when the number of healthy primary VMs equals zero. For all other values, the load balancer performs a failover when the total number of healthy primary VMs is less than this ratio.'
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  fingerprint:
                    description: "Fingerprint: Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService, otherwise the request will fail with error 412 conditionNotMet. \n To see the latest fingerprint, make a get() request to retrieve a BackendService."
                    type: string
                  healthChecks:
                    description: 'HealthChecks: The list of URLs to the healthChecks, httpHealthChecks (legacy), or httpsHealthChecks (legacy) resource for health checking this backend service. Not all backend services support legacy health checks. See  Load balancer guide. Currently at most one health check can be specified. Backend services with instance group or zonal NEG backends must have a health check. Backend services with internet NEG backends must not have a health check. A health check must'
                    items:
                      type: string
                    type: array
                  iap:
                    description: 'BackendServiceIAP: Identity-Aware Proxy'
                    properties:
                      enabled:
                        type: boolean
                      oauth2ClientId:
                        type: string
                      oauth2ClientSecret:
                        type: string
                      oauth2ClientSecretSha256:
                        description: 'Oauth2ClientSecretSha256: [Output Only] SHA256 hash value for the field oauth2_client_secret above.'
                        type: string
                    type: object
                  loadBalancingScheme:
                    description: "LoadBalancingScheme: Specifies the load balancer type. Choose EXTERNAL for load balancers that receive traffic from external clients. Choose INTERNAL for Internal TCP/UDP Load Balancing. Choose INTERNAL_MANAGED for Internal HTTP(S) Load Balancing. Choose INTERNAL_SELF_MANAGED for Traffic Director. A backend service created for one type of load balancing cannot be used with another. For more information, refer to Choosing a load balancer. \n Possible values:   \"EXTERNAL\"   \"INTERNAL\"   \"INTERNAL_MANAGED\"   \"INTERNAL_SELF_MANAGED\"   \"INVALID_LOAD_BALANCING_SCHEME\""
                    type: string
                  localityLbPolicy:
                    description: "LocalityLbPolicy: The load balancing algorithm used within the scope of the locality. The possible values are: - ROUND_ROBIN: This is a simple policy in which each healthy backend is selected in round robin order. This is the default. - LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests. - RING_HASH: The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests. - RANDOM: The load balancer selects a random healthy host. - ORIGINAL_DESTINATION: Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer. - MAGLEV: used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to https://ai.google/research/pubs/pub44824 \n This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. \n - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. \n If sessionAffinity is not NONE, and this field is not set to >MAGLEV or RING_HASH, session affinity settings will not take effect. \n Possible values:   \"INVALID_LB_POLICY\"   \"LEAST_REQUEST\"   \"MAGLEV\"   \"ORIGINAL_DESTINATION\"   \"RANDOM\"   \"RING_HASH\"   \"ROUND_ROBIN\""
                    type: string
                  logConfig:
                    description: 'LogConfig: This field denotes the logging options for the load balancer traffic served by this backend service. If logging is enabled, logs will be exported to Stackdriver.'
                    properties:
                      enable:
                        description: 'Enable: This field denotes whether to enable logging for the load balancer traffic served by this backend service.'
                        type: boolean
                      sampleRate:
                        anyOf:
                        - type: integer
                        - type: string
                        description: 'SampleRate: This field can only be specified if logging is enabled for this backend service. The value of the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported. The default value is 1.0.'
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  network:
                    description: 'Network: URI of the network to which this router belongs.'
                    type: string
                  networkRef:
                    description: NetworkRef references a Network and retrieves its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels is selected.
                        type: object
                    type: object
                  outlierDetection:
                    description: "OutlierDetection: Settings controlling the eviction of unhealthy hosts from the load balancing pool for the backend service. If not set, this feature is considered disabled. \n This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. \n - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED."
                    properties:
                      baseEjectionTime:
                        description: 'BaseEjectionTime: The base time that a host is ejected for. The real ejection time is equal to the base ejection time multiplied by the number of times the host has been ejected. Defaults to 30000ms or 30s.'
                        properties:
                          nanos:
                            description: 'Nanos: Span of time that''s a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.'
                            format: int64
                            type: integer
                          seconds:
                            description: 'Seconds: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                            format: int64
                            type: integer
                        type: object
                      consecutiveErrors:
                        description: 'ConsecutiveErrors: Number of errors before a host is ejected from the connection pool. When the backend host is accessed over HTTP, a 5xx return code qualifies as an error. Defaults to 5.'
                        format: int64
                        type: integer
                      consecutiveGatewayFailure:
                        description: 'ConsecutiveGatewayFailure: The number of consecutive gateway failures (502, 503, 504 status or connection errors that are mapped to one of those status codes) before a consecutive gateway failure ejection occurs. Defaults to 3.'
                        format: int64
                        type: integer
                      enforcingConsecutiveErrors:
                        description: 'EnforcingConsecutiveErrors: The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive 5xx. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 0.'
                        format: int64
                        type: integer
                      enforcingConsecutiveGatewayFailure:
                        description: 'EnforcingConsecutiveGatewayFailure: The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive gateway failures. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.'
                        format: int64
                        type: integer
                      enforcingSuccessRate:
                        description: 'EnforcingSuccessRate: The percentage chance that a host will be actually ejected when an outlier status is detected through success rate statistics. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.'
                        format: int64
                        type: integer
                      interval:
                        description: 'Interval: Time interval between ejection analysis sweeps. This can result in both new ejections as well as hosts being returned to service. Defaults to 1 second.'
                        properties:
                          nanos:
                            description: 'Nanos: Span of time that''s a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.'
                            format: int64
                            type: integer
                          seconds:
                            description: 'Seconds: Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                            format: int64
                            type: integer
                        type: object
                      maxEjectionPercent:
                        description: 'MaxEjectionPercent: Maximum percentage of hosts in the load balancing pool for the backend service that can be ejected. Defaults to 50%.'
                        format: int64
                        type: integer
                      successRateMinimumHosts:
                        description: 'SuccessRateMinimumHosts: The number of hosts in a cluster that must have enough request volume to detect success rate outliers. If the number of hosts is less than this setting, outlier detection via success rate statistics is not performed for any host in the cluster. Defaults to 5.'
                        format: int64
                        type: integer
                      successRateRequestVolume:
                        description: 'SuccessRateRequestVolume: The minimum number of total requests that must be collected in one interval (as defined by the interval duration above) to include this host in success rate based outlier detection. If the volume is lower than this setting, outlier detection via success rate statistics is not performed for that host. Defaults to 100.'
                        format: int64
                        type: integer
                      successRateStdevFactor:
                        description: 'SuccessRateStdevFactor: This factor is used to determine the ejection threshold for success rate outlier ejection. The ejection threshold is the difference between the mean success rate, and the product of this factor and the standard deviation of the mean success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided by a thousand to get a double. That is, if the desired factor is 1.9, the runtime value should be 1900. Defaults to 1900.'
                        format: int64
                        type: integer
                    type: object
                  port:
                    description: "Port: Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80. \n This cannot be used if the loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing)."
                    format: int64
                    type: integer
                  portName:
                    description: "PortName: A named port on a backend instance group representing the port for communication to the backend VMs in that group. Required when the loadBalancingScheme is EXTERNAL, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the backends are instance groups. The named port must be defined on each backend instance group. This parameter has no meaning if the backends are NEGs. \n Must be omitted when the loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Blaancing)."
                    type: string
                  protocol:
                    description: "Protocol: The protocol this BackendService uses to communicate with backends. \n Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, or UDP. depending on the chosen load balancer or Traffic Director configuration. Refer to the documentation for the load balancer or for Traffic Director for more information. \n Possible values:   \"HTTP\"   \"HTTP2\"   \"HTTPS\"   \"SSL\"   \"TCP\"   \"UDP\""
                    type: string
                  sessionAffinity:
                    description: "SessionAffinity: Type of session affinity to use. The default is NONE. Session affinity is not applicable if the --protocol is UDP. \n When the loadBalancingScheme is EXTERNAL, possible values are NONE, CLIENT_IP, or GENERATED_COOKIE. You can use GENERATED_COOKIE if the protocol is HTTP or HTTPS. \n When the loadBalancingScheme is INTERNAL, possible values are NONE, CLIENT_IP, CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO. \n When the loadBalancingScheme is INTERNAL_SELF_MANAGED, or INTERNAL_MANAGED, possible values are NONE, CLIENT_IP, GENERATED_COOKIE, HEADER_FIELD, or HTTP_COOKIE. \n Possible values:   \"CLIENT_IP\"   \"CLIENT_IP_PORT_PROTO\"   \"CLIENT_IP_PROTO\"   \"GENERATED_COOKIE\"   \"HEADER_FIELD\"   \"HTTP_COOKIE\"   \"NONE\""
                    type: string
                  timeoutSec:
                    description: 'TimeoutSec: The backend service timeout has a different meaning depending on the type of load balancer. For more information read, Backend service settings The default is 30 seconds.'
                    format: int64
                    type: integer
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A BackendServiceStatus represents the observed state of a BackendService.
            properties:
              atProvider:
                description: A BackendServiceObservation represents the observed state of a Google Compute Engine VPC BackendService.
                properties:
                  creationTimestamp:
                    description: 'CreationTimestamp: [Output Only] Creation timestamp in RFC3339 text format.'
                    type: string
                  id:
                    description: 'Id: [Output Only] The unique identifier for the resource. This identifier is defined by the server.'
                    format: int64
                    type: integer
                  kind:
                    description: 'Kind: [Output Only] Type of resource. Always compute#backendService for backend services.'
                    type: string
                  region:
                    description: 'Region: [Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.'
                    type: string
                  securityPolicy:
                    description: 'SecurityPolicy: [Output Only] The resource URL for the security policy associated with this backend service.'
                    type: string
                  selfLink:
                    description: 'SelfLink: [Output Only] Server-defined URL for the resource.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
