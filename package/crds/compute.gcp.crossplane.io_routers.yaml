
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: routers.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Router
    listKind: RouterList
    plural: routers
    singular: router
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Router is a managed resource that represents a Google Compute Engine VPC Router.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A RouterSpec defines the desired state of a Router.
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'RouterParameters define the desired state of a Google Compute Engine VPC Router. Most fields map directly to a Router: https://cloud.google.com/compute/docs/reference/rest/v1/networks'
                properties:
                  bgp:
                    description: 'Bgp: BGP information specific to this router.'
                    properties:
                      advertiseMode:
                        description: "AdvertiseMode: User-specified flag to indicate which mode to use for advertisement. The options are DEFAULT or CUSTOM. \n Possible values:   \"CUSTOM\"   \"DEFAULT\""
                        type: string
                      advertisedGroups:
                        description: "AdvertisedGroups: User-specified list of prefix groups to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and is advertised to all peers of the router. These groups will be advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups. \n Possible values:   \"ALL_SUBNETS\""
                        items:
                          type: string
                        type: array
                      advertisedIpRanges:
                        description: 'AdvertisedIPRanges: User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and is advertised to all peers of the router. These IP ranges will be advertised in addition to any specified groups. Leave this field blank to advertise no custom IP ranges.'
                        items:
                          description: RouterAdvertisedIPRange is a description-tagged IP ranges for the router to advertise.
                          properties:
                            description:
                              description: 'Description: User-specified description for the IP range.'
                              type: string
                            range:
                              description: 'Range: The IP range to advertise. The value must be a CIDR-formatted string.'
                              type: string
                          required:
                          - range
                          type: object
                        type: array
                      asn:
                        description: 'Asn: Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN, either 16-bit or 32-bit. The value will be fixed for this router resource. All VPN tunnels that link to this router will have the same local ASN.'
                        format: int64
                        type: integer
                    type: object
                  bgpPeers:
                    description: 'BgpPeers: BGP information that must be configured into the routing stack to establish BGP peering. This information must specify the peer ASN and either the interface name, IP address, or peer IP address. Please refer to RFC4273.'
                    items:
                      description: RouterBgpPeer information that must be configured into the routing stack to establish BGP peering. This information must specify the peer ASN and either the interface name, IP address, or peer IP address. Please refer to RFC4273.
                      properties:
                        advertiseMode:
                          description: "AdvertiseMode: User-specified flag to indicate which mode to use for advertisement. \n Possible values:   \"CUSTOM\"   \"DEFAULT\""
                          type: string
                        advertisedGroups:
                          description: "AdvertisedGroups: User-specified list of prefix groups to advertise in custom mode, which can take one of the following options: - ALL_SUBNETS: Advertises all available subnets, including peer VPC subnets. - ALL_VPC_SUBNETS: Advertises the router's own VPC subnets. - ALL_PEER_VPC_SUBNETS: Advertises peer subnets of the router's VPC network. Note that this field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the \"bgp\" message). These groups are advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups. \n Possible values:   \"ALL_SUBNETS\""
                          items:
                            type: string
                          type: array
                        advertisedIpRanges:
                          description: 'AdvertisedIPRanges: User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These IP ranges are advertised in addition to any specified groups. Leave this field blank to advertise no custom IP ranges.'
                          items:
                            description: RouterAdvertisedIPRange is a description-tagged IP ranges for the router to advertise.
                            properties:
                              description:
                                description: 'Description: User-specified description for the IP range.'
                                type: string
                              range:
                                description: 'Range: The IP range to advertise. The value must be a CIDR-formatted string.'
                                type: string
                            required:
                            - range
                            type: object
                          type: array
                        advertisedRoutePriority:
                          description: 'AdvertisedRoutePriority: The priority of routes advertised to this BGP peer. Where there is more than one matching route of maximum length, the routes with the lowest priority value win.'
                          format: int64
                          type: integer
                        interfaceName:
                          description: 'InterfaceName: Name of the interface the BGP peer is associated with.'
                          type: string
                        ipAddress:
                          description: 'IPAddress: IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.'
                          type: string
                        name:
                          description: 'Name: Name of this BGP peer. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
                          type: string
                        peerAsn:
                          description: 'PeerAsn: Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value.'
                          format: int64
                          type: integer
                        peerIpAddress:
                          description: 'PeerIPAddress: IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is supported.'
                          type: string
                      required:
                      - name
                      - peerAsn
                      type: object
                    type: array
                  description:
                    description: 'Description: An optional description of this resource. Provide this property when you create the resource.'
                    type: string
                  interfaces:
                    description: 'Interfaces: Router interfaces. Each interface requires either one linked resource, (for example, linkedVpnTunnel), or IP address and IP address range (for example, ipRange), or both.'
                    items:
                      properties:
                        ipRange:
                          description: 'IPRange: IP address and range of the interface. The IP range must be in the RFC3927 link-local IP address space. The value must be a CIDR-formatted string, for example: 169.254.0.1/30. NOTE: Do not truncate the address as it represents the IP address of the interface.'
                          type: string
                        linkedInterconnectAttachment:
                          description: 'LinkedInterconnectAttachment: URI of the linked Interconnect attachment. It must be in the same region as the router. Each interface can have one linked resource, which can be either be a VPN tunnel or an Interconnect attachment.'
                          type: string
                        linkedVpnTunnel:
                          description: 'LinkedVpnTunnel: URI of the linked VPN tunnel, which must be in the same region as the router. Each interface can have one linked resource, which can be either a VPN tunnel or an Interconnect attachment.'
                          type: string
                        name:
                          description: 'Name: Name of this interface entry. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.'
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  nats:
                    description: 'Nats: A list of NAT services created in this router.'
                    items:
                      description: RouterNat represents a Nat resource. It enables the VMs within the specified subnetworks to access Internet without external IP addresses. It specifies a list of subnetworks (and the ranges within) that want to use NAT. Customers can also provide the external IPs that would be used for NAT. GCP would auto-allocate ephemeral IPs if no external IPs are provided.
                      properties:
                        drainNatIps:
                          description: 'DrainNatIps: A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to the NAT. These IPs should be used for updating/patching a NAT only.'
                          items:
                            type: string
                          type: array
                        icmpIdleTimeoutSec:
                          description: 'IcmpIdleTimeoutSec: Timeout (in seconds) for ICMP connections. Defaults to 30s if not set.'
                          format: int64
                          type: integer
                        logConfig:
                          description: 'LogConfig: Configure logging on this NAT.'
                          properties:
                            enable:
                              description: 'Enable: Indicates whether or not to export logs. This is false by default.'
                              type: boolean
                            filter:
                              description: "Filter: Specify the desired filtering of logs on this NAT. If unspecified, logs are exported for all connections handled by this NAT. This option can take one of the following values: - ERRORS_ONLY: Export logs only for connection failures. - TRANSLATIONS_ONLY: Export logs only for successful connections. - ALL: Export logs for all connections, successful and unsuccessful. \n Possible values:   \"ALL\"   \"ERRORS_ONLY\"   \"TRANSLATIONS_ONLY\""
                              type: string
                          required:
                          - enable
                          type: object
                        minPortsPerVm:
                          description: 'MinPortsPerVM: Minimum number of ports allocated to a VM from this NAT config. If not set, a default number of ports is allocated to a VM. This is rounded up to the nearest power of 2. For example, if the value of this field is 50, at least 64 ports are allocated to a VM.'
                          format: int64
                          type: integer
                        name:
                          description: 'Name: Unique name of this Nat service. The name must be 1-63 characters long and comply with RFC1035.'
                          type: string
                        natIpAllocateOption:
                          description: "NatIPAllocateOption: Specify the NatIpAllocateOption, which can take one of the following values: - MANUAL_ONLY: Uses only Nat IP addresses provided by customers. When there are not enough specified Nat IPs, the Nat service fails for new VMs. - AUTO_ONLY: Nat IPs are allocated by Google Cloud Platform; customers can't specify any Nat IPs. When choosing AUTO_ONLY, then nat_ip should be empty. \n Possible values:   \"AUTO_ONLY\"   \"MANUAL_ONLY\""
                          type: string
                        natIps:
                          description: 'NatIPs: A list of URLs of the IP resources used for this Nat service. These IP addresses must be valid static external IP addresses assigned to the project.'
                          items:
                            type: string
                          type: array
                        sourceSubnetworkIpRangesToNat:
                          description: "SourceSubnetworkIPRangesToNat: Specify the Nat option, which can take one of the following values: - ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges in every Subnetwork are allowed to Nat. - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the primary IP ranges in every Subnetwork are allowed to Nat. - LIST_OF_SUBNETWORKS: A list of Subnetworks are allowed to Nat (specified in the field subnetwork below) The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other Router.Nat section in any Router for this network in this region. \n Possible values:   \"ALL_SUBNETWORKS_ALL_IP_RANGES\"   \"ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES\"   \"LIST_OF_SUBNETWORKS\""
                          type: string
                        subnetworks:
                          description: 'Subnetworks: A list of Subnetwork resources whose traffic should be translated by NAT Gateway. It is used only when LIST_OF_SUBNETWORKS is selected for the SubnetworkIpRangeToNatOption above.'
                          items:
                            description: RouterNatSubnetworkToNat defines the IP ranges that want to use NAT for a subnetwork.
                            properties:
                              name:
                                description: 'Name: URL for the subnetwork resource that will use NAT.'
                                type: string
                              nameRef:
                                description: NameRef references a Subnetwork and retrieves its URI
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                required:
                                - name
                                type: object
                              nameSelector:
                                description: NameSelector selects a reference to a Subnetwork
                                properties:
                                  matchControllerRef:
                                    description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with matching labels is selected.
                                    type: object
                                type: object
                              secondaryIpRangeNames:
                                description: 'SecondaryIpRangeNames: A list of the secondary ranges of the Subnetwork that are allowed to use NAT. This can be populated only if "LIST_OF_SECONDARY_IP_RANGES" is one of the values in source_ip_ranges_to_nat.'
                                items:
                                  type: string
                                type: array
                              sourceIpRangesToNat:
                                description: "SourceIpRangesToNat: Specify the options for NAT ranges in the Subnetwork. All options of a single value are valid except NAT_IP_RANGE_OPTION_UNSPECIFIED. The only valid option with multiple values is: [\"PRIMARY_IP_RANGE\", \"LIST_OF_SECONDARY_IP_RANGES\"] Default: [ALL_IP_RANGES] \n Possible values:   \"ALL_IP_RANGES\"   \"LIST_OF_SECONDARY_IP_RANGES\"   \"PRIMARY_IP_RANGE\""
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tcpEstablishedIdleTimeoutSec:
                          description: 'TCPEstablishedIdleTimeoutSec: Timeout (in seconds) for TCP established connections. Defaults to 1200s if not set.'
                          format: int64
                          type: integer
                        tcpTransitoryIdleTimeoutSec:
                          description: 'TCPTransitoryIdleTimeoutSec: Timeout (in seconds) for TCP transitory connections. Defaults to 30s if not set.'
                          format: int64
                          type: integer
                        udpIdleTimeoutSec:
                          description: 'UDPIdleTimeoutSec: Timeout (in seconds) for UDP connections. Defaults to 30s if not set.'
                          format: int64
                          type: integer
                      type: object
                    type: array
                  network:
                    description: 'Network: URI of the network to which this router belongs.'
                    type: string
                  networkRef:
                    description: NetworkRef references a Network and retrieves its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels is selected.
                        type: object
                    type: object
                  region:
                    description: 'Region: URL of the region where the Subnetwork resides. This field can be set only at resource creation time.'
                    type: string
                required:
                - region
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RouterStatus represents the observed state of a Router.
            properties:
              atProvider:
                description: A RouterObservation represents the observed state of a Google Compute Engine VPC Router.
                properties:
                  creationTimestamp:
                    description: 'CreationTimestamp: [Output Only] Creation timestamp in RFC3339 text format.'
                    type: string
                  id:
                    description: 'ID: [Output Only] The unique identifier for the resource. This identifier is defined by the server.'
                    format: int64
                    type: integer
                  kind:
                    description: 'Kind: [Output Only] Type of resource. Always compute#router for routers.'
                    type: string
                  region:
                    description: 'Region: [Output Only] URI of the region where the router resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.'
                    type: string
                  routerInterfaceObservation:
                    properties:
                      managementType:
                        description: "ManagementType: [Output Only] The resource that configures and manages this interface. - MANAGED_BY_USER is the default value and can be managed directly by users. - MANAGED_BY_ATTACHMENT is an interface that is configured and managed by Cloud Interconnect, specifically, by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of interface when the PARTNER InterconnectAttachment is created, updated, or deleted. \n Possible values:   \"MANAGED_BY_ATTACHMENT\"   \"MANAGED_BY_USER\""
                        type: string
                    type: object
                  routingBgpPeerObservation:
                    description: RouterBgpPeerObservation about BGP peering.
                    properties:
                      managementType:
                        description: "ManagementType: [Output Only] The resource that configures and manages this BGP peer. - MANAGED_BY_USER is the default value and can be managed by you or other users - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed by Cloud Interconnect, specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted. \n Possible values:   \"MANAGED_BY_ATTACHMENT\"   \"MANAGED_BY_USER\""
                        type: string
                    type: object
                  selfLink:
                    description: 'SelfLink: [Output Only] Server-defined URL for the resource.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
