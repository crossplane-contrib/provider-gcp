
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: routers.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    kind: Router
    listKind: RouterList
    plural: routers
    singular: router
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Router is the Schema for the routers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RouterSpec defines the desired state of Router
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RouterParameters defines parameters for a desired Cloud
                  Router https://cloud.google.com/compute/docs/reference/rest/v1/routers
                properties:
                  bgp:
                    description: Bgp information specific to this router.
                    properties:
                      advertiseMode:
                        description: User-specified flag to indicate which mode to
                          use for advertisement. The options are DEFAULT or CUSTOM.
                        enum:
                        - DEFAULT
                        - CUSTOM
                        type: string
                      advertisedGroups:
                        description: User-specified list of prefix groups to advertise
                          in custom mode. This field can only be populated if advertiseMode
                          is CUSTOM and is advertised to all peers of the router.
                          These groups will be advertised in addition to any specified
                          prefixes. Leave this field blank to advertise no custom
                          groups.
                        items:
                          enum:
                          - ALL_SUBNETS
                          - ALL_VPC_SUBNETS
                          type: string
                        type: array
                      advertisedIpRanges:
                        description: User-specified list of individual IP ranges to
                          advertise in custom mode. This field can only be populated
                          if advertiseMode is CUSTOM and is advertised to all peers
                          of the router. These IP ranges will be advertised in addition
                          to any specified groups. Leave this field blank to advertise
                          no custom IP ranges.
                        items:
                          properties:
                            description:
                              description: User-specified description for the IP range.
                              type: string
                            range:
                              description: The IP range to advertise. The value must
                                be a CIDR-formatted string.
                              type: string
                          type: object
                        type: array
                      asn:
                        description: Local BGP Autonomous System Number (ASN). Must
                          be an RFC6996 private ASN, either 16-bit or 32-bit. The
                          value will be fixed for this router resource. All VPN tunnels
                          that link to this router will have the same local ASN.
                        format: int32
                        type: integer
                      keepaliveInterval:
                        description: The interval in seconds between BGP keepalive
                          messages that are sent to the peer. Hold time is three times
                          the interval at which keepalive messages are sent, and the
                          hold time is the maximum number of seconds allowed to elapse
                          between successive keepalive messages that BGP receives
                          from a peer. BGP will use the smaller of either the local
                          hold time value or the peer's hold time value as the hold
                          time for the BGP connection between the two peers. If set,
                          this value must be between 20 and 60. The default is 20.
                        format: int32
                        type: integer
                    type: object
                  description:
                    description: Optional description for this resource. Provided
                      by the client when the resource is created.
                    type: string
                  name:
                    description: Name of the resource. Provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with RFC1035. Specifically, the name must be 1-63
                      characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?
                      which means the first character must be a lowercase letter,
                      and all following characters must be a dash, lowercase letter,
                      or digit, except the last character, which cannot be a dash.
                    type: string
                  nats:
                    description: A list of NAT services created in this router.
                    items:
                      properties:
                        drainNatIps:
                          description: A list of URLs of the IP resources to be drained.
                            These IPs must be valid static external IPs that have
                            been assigned to the NAT. These IPs should be used for
                            updating/patching a NAT only.
                          items:
                            type: string
                          type: array
                        enableEndpointIndependentMapping:
                          type: boolean
                        icmpIdleTimeoutSec:
                          description: Timeout (in seconds) for ICMP connections.
                            Defaults to 30s if not set.
                          type: integer
                        logConfig:
                          description: Configure logging on this NAT.
                          properties:
                            enable:
                              description: Indicates whether or not to export logs.
                                This is false by default.
                              type: boolean
                            filter:
                              description: 'Specify the desired filtering of logs
                                on this NAT. If unspecified, logs are exported for
                                all connections handled by this NAT. This option can
                                take one of the following values: ERRORS_ONLY: instantSnapshots.export
                                logs only for connection failures. TRANSLATIONS_ONLY:
                                instantSnapshots.export logs only for successful connections.
                                ALL: instantSnapshots.export logs for all connections,
                                successful and unsuccessful.'
                              enum:
                              - ERRORS_ONLY
                              - TRANSLATIONS_ONLY
                              - ALL
                              type: string
                          type: object
                        minPortsPerVm:
                          description: Minimum number of ports allocated to a VM from
                            this NAT config. If not set, a default number of ports
                            is allocated to a VM. This is rounded up to the nearest
                            power of 2. For example, if the value of this field is
                            50, at least 64 ports are allocated to a VM.
                          type: integer
                        name:
                          description: Unique name of this Nat service. The name must
                            be 1-63 characters long and comply with RFC1035.
                          type: string
                        natIpAllocateOption:
                          description: 'Specify the NatIpAllocateOption, which can
                            take one of the following values: MANUAL_ONLY: Uses only
                            Nat IP addresses provided by customers. When there are
                            not enough specified Nat IPs, the Nat service fails for
                            new VMs. AUTO_ONLY: Nat IPs are allocated by Google Cloud
                            Platform; customers can''t specify any Nat IPs. When choosing
                            AUTO_ONLY, then natIp should be empty.'
                          enum:
                          - MANUAL_ONLY
                          - AUTO_ONLY
                          type: string
                        natIps:
                          description: A list of URLs of the IP resources used for
                            this Nat service. These IP addresses must be valid static
                            external IP addresses assigned to the project.
                          items:
                            type: string
                          type: array
                        sourceSubnetworkIpRangesToNat:
                          description: 'Specify the Nat option, which can take one
                            of the following values: ALL_SUBNETWORKS_ALL_IP_RANGES:
                            All of the IP ranges in every Subnetwork are allowed to
                            Nat. ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the
                            primary IP ranges in every Subnetwork are allowed to Nat.
                            LIST_OF_SUBNETWORKS: A list of Subnetworks are allowed
                            to Nat (specified in the field subnetwork below) The default
                            is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note
                            that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES
                            or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should
                            not be any other Router.Nat section in any Router for
                            this network in this region.'
                          enum:
                          - ALL_SUBNETWORKS_ALL_IP_RANGES
                          - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES
                          - LIST_OF_SUBNETWORKS
                          type: string
                        subnetworks:
                          description: A list of Subnetwork resources whose traffic
                            should be translated by NAT Gateway. It is used only when
                            LIST_OF_SUBNETWORKS is selected for the SubnetworkIpRangeToNatOption
                            above.
                          properties:
                            name:
                              description: URL for the subnetwork resource that will
                                use NAT.
                              type: string
                            secondaryIpRangeNames:
                              description: A list of the secondary ranges of the Subnetwork
                                that are allowed to use NAT. This can be populated
                                only if "LIST_OF_SECONDARY_IP_RANGES" is one of the
                                values in sourceIpRangesToNat.
                              items:
                                type: string
                              type: array
                            sourceIpRangesToNat:
                              description: 'Specify the options for NAT ranges in
                                the Subnetwork. All options of a single value are
                                valid except NAT_IP_RANGE_OPTION_UNSPECIFIED. The
                                only valid option with multiple values is: ["PRIMARY_IP_RANGE",
                                "LIST_OF_SECONDARY_IP_RANGES"] Default: [ALL_IP_RANGES]'
                              enum:
                              - ALL_IP_RANGES
                              - PRIMARY_IP_RANGE
                              - LIST_OF_SECONDARY_IP_RANGES
                              items:
                                type: string
                              type: array
                          type: object
                        tcpEstablishedIdleTimeoutSec:
                          description: Timeout (in seconds) for TCP established connections.
                            Defaults to 1200s if not set.
                          type: integer
                        tcpTimeWaitTimeoutSec:
                          description: Timeout (in seconds) for TCP connections that
                            are in TIME_WAIT state. Defaults to 120s if not set.
                          type: integer
                        tcpTransitoryIdleTimeoutSec:
                          description: Timeout (in seconds) for TCP transitory connections.
                            Defaults to 30s if not set.
                          type: integer
                        udpIdleTimeoutSec:
                          description: Timeout (in seconds) for UDP connections. Defaults
                            to 30s if not set.
                          type: integer
                      type: object
                    type: array
                  network:
                    description: URI of the network to which this router belongs.
                    type: string
                  region:
                    description: URI of the region where the router resides.
                    type: string
                required:
                - name
                - network
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RouterStatus defines the observed state of Router
            properties:
              atProvider:
                description: RouterObservation is used to show the observed state
                  of the Router resource on GCP. All fields in this structure should
                  only be populated from GCP responses; any changes made to the k8s
                  resource outside of the crossplane gcp controller will be ignored
                  and overwritten.
                properties:
                  bgpPeers:
                    description: RouteBgpPeer information that must be configured
                      into the routing stack to establish BGP peering.
                    properties:
                      advertiseMode:
                        description: User-specified flag to indicate which mode to
                          use for advertisement.
                        enum:
                        - DEFAULT
                        - CUSTOM
                        type: string
                      advertisedGroups:
                        description: 'User-specified list of prefix groups to advertise
                          in custom mode, which can take one of the following options:
                          ALL_SUBNETS: Advertises all available subnets, including
                          peer VPC subnets. ALL_VPC_SUBNETS: Advertises the router''s
                          own VPC subnets. Note that this field can only be populated
                          if advertiseMode is CUSTOM and overrides the list defined
                          for the router (in the "bgp" message). These groups are
                          advertised in addition to any specified prefixes. Leave
                          this field blank to advertise no custom groups.'
                        items:
                          enum:
                          - ALL_SUBNETS
                          - ALL_VPC_SUBNETS
                          type: string
                        type: array
                      advertisedIpRanges:
                        description: User-specified list of individual IP ranges to
                          advertise in custom mode. This field can only be populated
                          if advertiseMode is CUSTOM and overrides the list defined
                          for the router (in the "bgp" message). These IP ranges are
                          advertised in addition to any specified groups. Leave this
                          field blank to advertise no custom IP ranges.
                        items:
                          properties:
                            description:
                              description: User-specified description for the IP range.
                              type: string
                            range:
                              description: The IP range to advertise. The value must
                                be a CIDR-formatted string.
                              type: string
                          type: object
                        type: array
                      advertisedRoutePriority:
                        description: The priority of routes advertised to this BGP
                          peer. Where there is more than one matching route of maximum
                          length, the routes with the lowest priority value win.
                        format: int32
                        type: integer
                      bfd:
                        description: BFD configuration for the BGP peering.
                        properties:
                          minReceiveInterval:
                            description: The minimum interval, in milliseconds, between
                              BFD control packets received from the peer router. The
                              actual value is negotiated between the two routers and
                              is equal to the greater of this value and the transmit
                              interval of the other router. If set, this value must
                              be between 1000 and 30000. The default is 1000.
                            format: int32
                            type: integer
                          minTransmitInterval:
                            description: The minimum interval, in milliseconds, between
                              BFD control packets transmitted to the peer router.
                              The actual value is negotiated between the two routers
                              and is equal to the greater of this value and the corresponding
                              receive interval of the other router. If set, this value
                              must be between 1000 and 30000. The default is 1000.
                            format: int32
                            type: integer
                          multiplier:
                            description: The number of consecutive BFD packets that
                              must be missed before BFD declares that a peer is unavailable.
                              If set, the value must be a value between 5 and 16.
                              The default is 5.
                            format: int32
                            type: integer
                          sessionInitializationMode:
                            description: The BFD session initialization mode for this
                              BGP peer. If set to ACTIVE, the Cloud Router will initiate
                              the BFD session for this BGP peer. If set to PASSIVE,
                              the Cloud Router will wait for the peer router to initiate
                              the BFD session for this BGP peer. If set to DISABLED,
                              BFD is disabled for this BGP peer. The default is PASSIVE.
                            enum:
                            - PASSIVE
                            - ACTIVE
                            - DISABLED
                            type: string
                        type: object
                      enable:
                        description: The status of the BGP peer connection. If set
                          to FALSE, any active session with the peer is terminated
                          and all associated routing information is removed. If set
                          to TRUE, the peer connection can be established with routing
                          information. The default is TRUE.
                        enum:
                        - "TRUE"
                        - "FALSE"
                        type: string
                      interfaceName:
                        description: Name of the interface the BGP peer is associated
                          with.
                        type: string
                      ipAddress:
                        description: IP address of the interface inside Google Cloud
                          Platform. Only IPv4 is supported.
                        type: string
                      managementType:
                        description: The resource that configures and manages this
                          BGP peer. MANAGED_BY_USER is the default value and can be
                          managed by you or other users MANAGED_BY_ATTACHMENT is a
                          BGP peer that is configured and managed by Cloud Interconnect,
                          specifically by an InterconnectAttachment of type PARTNER.
                          Google automatically creates, updates, and deletes this
                          type of BGP peer when the PARTNER InterconnectAttachment
                          is created, updated, or deleted.
                        enum:
                        - MANAGED_BY_USER
                        - MANAGED_BY_ATTACHMENT
                        type: string
                      name:
                        description: Name of this BGP peer. The name must be 1-63
                          characters long, and comply with RFC1035. Specifically,
                          the name must be 1-63 characters long and match the regular
                          expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
                          character must be a lowercase letter, and all following
                          characters must be a dash, lowercase letter, or digit, except
                          the last character, which cannot be a dash.
                        type: string
                      peerAsn:
                        description: Peer BGP Autonomous System Number (ASN). Each
                          BGP interface may use a different value.
                        format: int32
                        type: integer
                      peerIpAddress:
                        description: IP address of the BGP interface outside Google
                          Cloud Platform. Only IPv4 is supported.
                        type: string
                      routerApplianceInstance:
                        description: URI of the VM instance that is used as third-party
                          router appliances such as Next Gen Firewalls, Virtual Routers,
                          or Router Appliances. The VM instance must be located in
                          zones contained in the same region as this Cloud Router.
                          The VM instance is the peer side of the BGP session.
                        type: string
                    type: object
                  creationTimestamp:
                    description: CreationTimestamp in RFC3339 text format.
                    type: string
                  encryptedInterconnectRouter:
                    description: Indicates if a router is dedicated for use with encrypted
                      VLAN attachments (interconnectAttachments). Not currently available
                      publicly.
                    type: boolean
                  id:
                    description: ID is the unique identifier for the router resource.
                      This identifier is defined by the server.
                    format: int64
                    type: integer
                  interfaces:
                    properties:
                      ipRange:
                        description: 'IP address and range of the interface. The IP
                          range must be in the RFC3927 link-local IP address space.
                          The value must be a CIDR-formatted string, for example:
                          169.254.0.1/30. NOTE: Do not truncate the address as it
                          represents the IP address of the interface.'
                        type: string
                      linkedInterconnectAttachment:
                        description: URI of the linked Interconnect attachment. It
                          must be in the same region as the router.
                        type: string
                      linkedVpnTunnel:
                        description: URI of the linked VPN tunnel, which must be in
                          the same region as the router.
                        type: string
                      managementType:
                        description: "ManagementType: The resource that configures
                          and manages this interface. - MANAGED_BY_USER is the default
                          value and can be managed directly by users. - MANAGED_BY_ATTACHMENT
                          is an interface that is configured and managed by Cloud
                          Interconnect, specifically, by an InterconnectAttachment
                          of type PARTNER. Google automatically creates, updates,
                          and deletes this type of interface when the PARTNER InterconnectAttachment
                          is created, updated, or deleted. \n Possible values:   \"MANAGED_BY_ATTACHMENT\"
                          \  \"MANAGED_BY_USER\""
                        enum:
                        - MANAGED_BY_USER
                        - MANAGED_BY_ATTACHMENT
                        type: string
                      name:
                        description: Name of this interface entry. The name must be
                          1-63 characters long, and comply with RFC1035. Specifically,
                          the name must be 1-63 characters long and match the regular
                          expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
                          character must be a lowercase letter, and all following
                          characters must be a dash, lowercase letter, or digit, except
                          the last character, which cannot be a dash.
                        type: string
                      privateIpAddress:
                        description: The regional private internal IP address that
                          is used to establish BGP sessions to a VM instance acting
                          as a third-party Router Appliance, such as a Next Gen Firewall,
                          a Virtual Router, or an SD-WAN VM.
                        type: string
                      redundantInterface:
                        description: Name of the interface that will be redundant
                          with the current interface you are creating. The redundantInterface
                          must belong to the same Cloud Router as the interface here.
                          To establish the BGP session to a Router Appliance VM, you
                          must create two BGP peers. The two BGP peers must be attached
                          to two separate interfaces that are redundant with each
                          other. The redundantInterface must be 1-63 characters long,
                          and comply with RFC1035. Specifically, the redundantInterface
                          must be 1-63 characters long and match the regular expression
                          [a-z]([-a-z0-9]*[a-z0-9])? which means the first character
                          must be a lowercase letter, and all following characters
                          must be a dash, lowercase letter, or digit, except the last
                          character, which cannot be a dash.
                        type: string
                      subnetwork:
                        description: The URI of the subnetwork resource that this
                          interface belongs to, which must be in the same region as
                          the Cloud Router. When you establish a BGP session to a
                          VM instance using this interface, the VM instance must belong
                          to the same subnetwork as the subnetwork specified here.
                        type: string
                    type: object
                  kind:
                    description: Type of resource. Always compute#router for routers.
                    type: string
                  selfLink:
                    description: Server-defined URL for the resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
