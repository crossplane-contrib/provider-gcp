
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: forwardingrules.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: ForwardingRule
    listKind: ForwardingRuleList
    plural: forwardingrules
    singular: forwardingrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A ForwardingRule is a managed resource that represents a Google Compute Engine VPC ForwardingRule.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ForwardingRuleSpec defines the desired state of a ForwardingRule.
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'ForwardingRuleParameters define the desired state of a Google Compute Engine VPC ForwardingRule. Most fields map directly to a ForwardingRule: https://cloud.google.com/compute/docs/reference/rest/v1/networks'
                properties:
                  IPAddress:
                    description: "IPAddress: IP address that this forwarding rule serves. When a client sends traffic to this IP address, the forwarding rule directs the traffic to the target that you specify in the forwarding rule. \n If you don't specify a reserved IP address, an ephemeral IP address is assigned. Methods for specifying an IP address: \n * IPv4 dotted decimal, as in `100.1.2.3` * Full URL, as in https://www.googleapis.com/compute/v1/projects/project_id/regions/region/addresses/address-name * Partial URL or by name, as in: * projects/project_id/regions/region/addresses/address-name * regions/region/addresses/address-name * global/addresses/address-name * address-name \n The loadBalancingScheme and the forwarding rule's target determine the type of IP address that you can use. For detailed information, refer to [IP address specifications](/load-balancing/docs/forwarding-rule-concepts#ip_addre ss_specifications)."
                    type: string
                  IPProtocol:
                    description: "IPProtocol: The IP protocol to which this rule applies. For protocol forwarding, valid options are TCP, UDP, ESP, AH, SCTP or ICMP. \n For Internal TCP/UDP Load Balancing, the load balancing scheme is INTERNAL, and one of TCP or UDP are valid. For Traffic Director, the load balancing scheme is INTERNAL_SELF_MANAGED, and only TCPis valid. For Internal HTTP(S) Load Balancing, the load balancing scheme is INTERNAL_MANAGED, and only TCP is valid. For HTTP(S), SSL Proxy, and TCP Proxy Load Balancing, the load balancing scheme is EXTERNAL and only TCP is valid. For Network TCP/UDP Load Balancing, the load balancing scheme is EXTERNAL, and one of TCP or UDP is valid. \n Possible values:   \"AH\"   \"ESP\"   \"ICMP\"   \"SCTP\"   \"TCP\"   \"UDP\""
                    type: string
                  allPorts:
                    description: "AllPorts: This field is used along with the backend_service field for internal load balancing or with the target field for internal TargetInstance. This field cannot be used with port or portRange fields. \n When the load balancing scheme is INTERNAL and protocol is TCP/UDP, specify this field to allow packets addressed to any ports will be forwarded to the backends configured with this forwarding rule."
                    type: boolean
                  allowGlobalAccess:
                    description: 'AllowGlobalAccess: This field is used along with the backend_service field for internal load balancing or with the target field for internal TargetInstance. If the field is set to TRUE, clients can access ILB from all regions. Otherwise only allows access from clients in the same region as the internal load balancer.'
                    type: boolean
                  backendService:
                    description: "BackendService: This field is only used for INTERNAL load balancing. \n For internal load balancing, this field identifies the BackendService resource to receive the matched traffic."
                    type: string
                  backendServiceRef:
                    description: BackendServiceRef references a BackendService
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  backendServiceSelector:
                    description: BackendServiceSelector selects a reference to a BackendService
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels is selected.
                        type: object
                    type: object
                  description:
                    description: 'Description: An optional description of this resource. Provide this property when you create the resource.'
                    type: string
                  fingerprint:
                    description: "Fingerprint: Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a ForwardingRule. Include the fingerprint in patch request to ensure that you do not overwrite changes that were applied from another concurrent request. \n To see the latest fingerprint, make a get() request to retrieve a ForwardingRule."
                    type: string
                  ipVersion:
                    description: "IpVersion: The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for an external global forwarding rule. \n Possible values:   \"IPV4\"   \"IPV6\"   \"UNSPECIFIED_VERSION\""
                    type: string
                  isMirroringCollector:
                    description: 'IsMirroringCollector: Indicates whether or not this load balancer can be used as a collector for packet mirroring. To prevent mirroring loops, instances behind this load balancer will not have their traffic mirrored even if a PacketMirroring rule applies to them. This can only be set to true for load balancers that have their loadBalancingScheme set to INTERNAL.'
                    type: boolean
                  loadBalancingScheme:
                    description: "LoadBalancingScheme: Specifies the forwarding rule type. \n - EXTERNAL is used for: - Classic Cloud VPN gateways - Protocol forwarding to VMs from an external IP address - The following load balancers: HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP - INTERNAL is used for: - Protocol forwarding to VMs from an internal IP address - Internal TCP/UDP load balancers - INTERNAL_MANAGED is used for: - Internal HTTP(S) load balancers - INTERNAL_SELF_MANAGED is used for: - Traffic Director \n For more information about forwarding rules, refer to Forwarding rule concepts. \n Possible values:   \"EXTERNAL\"   \"INTERNAL\"   \"INTERNAL_MANAGED\"   \"INTERNAL_SELF_MANAGED\"   \"INVALID\""
                    type: string
                  metadataFilters:
                    description: 'MetadataFilters: Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set of xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. If a match takes place, the relevant configuration is made available to those proxies. Otherwise, all the resources (e.g. TargetHttpProxy, UrlMap) referenced by the ForwardingRule will not be visible to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels provided in the metadata. metadataFilters specified here will be applifed before those specified in the UrlMap that this ForwardingRule references. metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.'
                    items:
                      description: 'MetadataFilter: Opaque filter criteria used by loadbalancers to restrict routing configuration to a limited set of loadbalancing proxies. Proxies and sidecars involved in loadbalancing would typically present metadata to the loadbalancers which need to match criteria specified here. If a match takes place, the relevant configuration is made available to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels provided in the metadata. An example for using metadataFilters would be: if loadbalancing involves  Envoys, they will only receive routing configuration when values in metadataFilters match values supplied in <a href="https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/core/b ase.proto#envoy-api-msg-core-node" Node metadata of their XDS requests to loadbalancers.'
                      properties:
                        filterLabels:
                          description: 'FilterLabels: The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list must not be empty and can have at the most 64 entries.'
                          items:
                            description: MetadataFilterLabelMatch is a MetadataFilter label name value pairs that are expected to match corresponding labels presented as metadata to the loadbalancer.
                            properties:
                              name:
                                description: 'Name: Name of metadata label. The name can have a maximum length of 1024 characters and must be at least 1 character long.'
                                type: string
                              value:
                                description: 'Value: The value of the label must match the specified value. value can have a maximum length of 1024 characters.'
                                type: string
                            type: object
                          type: array
                        filterMatchCriteria:
                          description: "FilterMatchCriteria: Specifies how individual filterLabel matches within the list of filterLabels contribute towards the overall metadataFilter match. Supported values are: - MATCH_ANY: At least one of the filterLabels must have a matching label in the provided metadata. - MATCH_ALL: All filterLabels must have matching labels in the provided metadata. \n Possible values:   \"MATCH_ALL\"   \"MATCH_ANY\"   \"NOT_SET\""
                          type: string
                      type: object
                    type: array
                  network:
                    description: "Network: This field is not used for external load balancing. \n For INTERNAL and INTERNAL_SELF_MANAGED load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used."
                    type: string
                  networkRef:
                    description: NetworkRef references a Network and retrieves its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels is selected.
                        type: object
                    type: object
                  networkTier:
                    description: "NetworkTier: This signifies the networking tier used for configuring this load balancer and can only take the following values: PREMIUM, STANDARD. \n For regional ForwardingRule, the valid values are PREMIUM and STANDARD. For GlobalForwardingRule, the valid value is PREMIUM. \n If this field is not specified, it is assumed to be PREMIUM. If IPAddress is specified, this value must be equal to the networkTier of the Address. \n Possible values:   \"PREMIUM\"   \"STANDARD\""
                    type: string
                  portRange:
                    description: "PortRange: When the load balancing scheme is EXTERNAL, INTERNAL_SELF_MANAGED and INTERNAL_MANAGED, you can specify a port_range. Use with a forwarding rule that points to a target proxy or a target pool. Do not use with a forwarding rule that points to a backend service. This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance. \n Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to target. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges. \n Some types of forwarding target have constraints on the acceptable ports: - TargetHttpProxy: 80, 8080 - TargetHttpsProxy: 443 - TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222 - TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222 - TargetVpnGateway: 500, 4500"
                    type: string
                  ports:
                    description: "Ports: This field is used along with the backend_service field for internal load balancing. \n When the load balancing scheme is INTERNAL, a list of ports can be configured, for example, ['80'], ['8000','9000']. Only packets addressed to these ports are forwarded to the backends configured with the forwarding rule. \n If the forwarding rule's loadBalancingScheme is INTERNAL, you can specify ports in one of the following ways: \n * A list of up to five ports, which can be non-contiguous * Keyword ALL, which causes the forwarding rule to forward traffic on any port of the forwarding rule's protocol."
                    items:
                      type: string
                    type: array
                  serviceLabel:
                    description: "ServiceLabel: An optional prefix to the service name for this Forwarding Rule. If specified, the prefix is the first label of the fully qualified service name. \n The label must be 1-63 characters long, and comply with RFC1035. Specifically, the label must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. \n This field is only used for internal load balancing."
                    type: string
                  subnetwork:
                    description: "Subnetwork: This field is only used for INTERNAL load balancing. \n For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule. \n If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified."
                    type: string
                  subnetworkRef:
                    description: SubnetworkRef references a Subnetwork and retrieves its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  subnetworkSelector:
                    description: SubnetworkSelector selects a reference to a Subnetwork
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels is selected.
                        type: object
                    type: object
                  target:
                    description: 'Target: The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object. For INTERNAL_SELF_MANAGED load balancing, only targetHttpProxy is valid, not targetHttpsProxy.'
                    type: string
                  targetRef:
                    description: TargetRef references a Target and retrieves its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  targetSelector:
                    description: TargetSelector selects a reference to a Target
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels is selected.
                        type: object
                    type: object
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ForwardingRuleStatus represents the observed state of a ForwardingRule.
            properties:
              atProvider:
                description: A ForwardingRuleObservation represents the observed state of a Google Compute Engine VPC ForwardingRule.
                properties:
                  creationTimestamp:
                    description: 'CreationTimestamp: [Output Only] Creation timestamp in RFC3339 text format.'
                    type: string
                  id:
                    description: 'Id: [Output Only] The unique identifier for the resource. This identifier is defined by the server.'
                    format: int64
                    type: integer
                  kind:
                    description: 'Kind: [Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources.'
                    type: string
                  region:
                    description: 'Region: [Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.'
                    type: string
                  selfLink:
                    description: 'SelfLink: [Output Only] Server-defined URL for the resource.'
                    type: string
                  serviceName:
                    description: "ServiceName: [Output Only] The internal fully qualified service name for this Forwarding Rule. \n This field is only used for internal load balancing."
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
