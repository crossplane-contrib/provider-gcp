---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: uptimecheckconfigs.monitoring.gcp.jet.crossplane.io
spec:
  group: monitoring.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: UptimeCheckConfig
    listKind: UptimeCheckConfigList
    plural: uptimecheckconfigs
    singular: uptimecheckconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: UptimeCheckConfig is the Schema for the UptimeCheckConfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UptimeCheckConfigSpec defines the desired state of UptimeCheckConfig
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  contentMatchers:
                    description: The expected content on the page the check is run
                      against. Currently, only the first entry in the list is supported,
                      and other entries will be ignored. The server will look for
                      an exact match of the string in the page response's content.
                      This field is optional and should only be specified if a content
                      match is required.
                    items:
                      properties:
                        content:
                          description: String or regex content to match (max 1024
                            bytes)
                          type: string
                        matcher:
                          description: 'The type of content matcher that will be applied
                            to the server output, compared to the content string when
                            the check is run. Default value: "CONTAINS_STRING" Possible
                            values: ["CONTAINS_STRING", "NOT_CONTAINS_STRING", "MATCHES_REGEX",
                            "NOT_MATCHES_REGEX"]'
                          type: string
                      required:
                      - content
                      type: object
                    type: array
                  displayName:
                    description: A human-friendly name for the uptime check configuration.
                      The display name should be unique within a Stackdriver Workspace
                      in order to make it easier to identify; however, uniqueness
                      is not enforced.
                    type: string
                  httpCheck:
                    description: Contains information needed to make an HTTP or HTTPS
                      check.
                    items:
                      properties:
                        authInfo:
                          description: The authentication information. Optional when
                            creating an HTTP check; defaults to empty.
                          items:
                            properties:
                              passwordSecretRef:
                                description: The password to authenticate.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              username:
                                description: The username to authenticate.
                                type: string
                            required:
                            - passwordSecretRef
                            - username
                            type: object
                          type: array
                        body:
                          description: The request body associated with the HTTP POST
                            request. If contentType is URL_ENCODED, the body passed
                            in must be URL-encoded. Users can provide a Content-Length
                            header via the headers field or the API will do so. If
                            the requestMethod is GET and body is not empty, the API
                            will return an error. The maximum byte size is 1 megabyte.
                            Note - As with all bytes fields JSON representations are
                            base64 encoded. e.g. "foo=bar" in URL-encoded form is
                            "foo%3Dbar" and in base64 encoding is "Zm9vJTI1M0RiYXI=".
                          type: string
                        contentType:
                          description: 'The content type to use for the check. Possible
                            values: ["TYPE_UNSPECIFIED", "URL_ENCODED"]'
                          type: string
                        headers:
                          additionalProperties:
                            type: string
                          description: The list of headers to send as part of the
                            uptime check request. If two headers have the same key
                            and different values, they should be entered as a single
                            header, with the value being a comma-separated list of
                            all the desired values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt
                            (page 31). Entering two separate headers with the same
                            key in a Create call will cause the first to be overwritten
                            by the second. The maximum number of headers allowed is
                            100.
                          type: object
                        maskHeaders:
                          description: Boolean specifying whether to encrypt the header
                            information. Encryption should be specified for any headers
                            related to authentication that you do not wish to be seen
                            when retrieving the configuration. The server will be
                            responsible for encrypting the headers. On Get/List calls,
                            if mask_headers is set to True then the headers will be
                            obscured with ******.
                          type: boolean
                        path:
                          description: The path to the page to run the check against.
                            Will be combined with the host (specified within the MonitoredResource)
                            and port to construct the full URL. Optional (defaults
                            to "/").
                          type: string
                        port:
                          description: The port to the page to run the check against.
                            Will be combined with host (specified within the MonitoredResource)
                            and path to construct the full URL. Optional (defaults
                            to 80 without SSL, or 443 with SSL).
                          type: number
                        requestMethod:
                          description: 'The HTTP request method to use for the check.
                            If set to METHOD_UNSPECIFIED then requestMethod defaults
                            to GET. Default value: "GET" Possible values: ["METHOD_UNSPECIFIED",
                            "GET", "POST"]'
                          type: string
                        useSsl:
                          description: If true, use HTTPS instead of HTTP to run the
                            check.
                          type: boolean
                        validateSsl:
                          description: Boolean specifying whether to include SSL certificate
                            validation as a part of the Uptime check. Only applies
                            to checks where monitoredResource is set to uptime_url.
                            If useSsl is false, setting validateSsl to true has no
                            effect.
                          type: boolean
                      type: object
                    type: array
                  monitoredResource:
                    description: 'The monitored resource (https://cloud.google.com/monitoring/api/resources)
                      associated with the configuration. The following monitored resource
                      types are supported for uptime checks:  uptime_url  gce_instance  gae_app  aws_ec2_instance  aws_elb_load_balancer'
                    items:
                      properties:
                        labels:
                          additionalProperties:
                            type: string
                          description: Values for all of the labels listed in the
                            associated monitored resource descriptor. For example,
                            Compute Engine VM instances use the labels "project_id",
                            "instance_id", and "zone".
                          type: object
                        type:
                          description: The monitored resource type. This field must
                            match the type field of a MonitoredResourceDescriptor
                            (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.monitoredResourceDescriptors#MonitoredResourceDescriptor)
                            object. For example, the type of a Compute Engine VM instance
                            is gce_instance. For a list of types, see Monitoring resource
                            types (https://cloud.google.com/monitoring/api/resources)
                            and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).
                          type: string
                      required:
                      - labels
                      - type
                      type: object
                    type: array
                  period:
                    description: How often, in seconds, the uptime check is performed.
                      Currently, the only supported values are 60s (1 minute), 300s
                      (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional,
                      defaults to 300s.
                    type: string
                  project:
                    type: string
                  resourceGroup:
                    description: The group resource associated with the configuration.
                    items:
                      properties:
                        groupId:
                          description: The group of resources being monitored. Should
                            be the 'name' of a group
                          type: string
                        resourceType:
                          description: 'The resource type of the group members. Possible
                            values: ["RESOURCE_TYPE_UNSPECIFIED", "INSTANCE", "AWS_ELB_LOAD_BALANCER"]'
                          type: string
                      type: object
                    type: array
                  selectedRegions:
                    description: The list of regions from which the check will be
                      run. Some regions contain one location, and others contain more
                      than one. If this field is specified, enough regions to include
                      a minimum of 3 locations must be provided, or an error message
                      is returned. Not specifying this field will result in uptime
                      checks running from all regions.
                    items:
                      type: string
                    type: array
                  tcpCheck:
                    description: Contains information needed to make a TCP check.
                    items:
                      properties:
                        port:
                          description: The port to the page to run the check against.
                            Will be combined with host (specified within the MonitoredResource)
                            to construct the full URL.
                          type: number
                      required:
                      - port
                      type: object
                    type: array
                  timeout:
                    description: The maximum amount of time to wait for the request
                      to complete (must be between 1 and 60 seconds). Accepted formats
                      https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration
                    type: string
                required:
                - displayName
                - timeout
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: UptimeCheckConfigStatus defines the observed state of UptimeCheckConfig.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  uptimeCheckId:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
