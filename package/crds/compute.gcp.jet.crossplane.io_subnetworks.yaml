---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: subnetworks.compute.gcp.jet.crossplane.io
spec:
  group: compute.gcp.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcpjet
    kind: Subnetwork
    listKind: SubnetworkList
    plural: subnetworks
    singular: subnetwork
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Subnetwork is the Schema for the Subnetworks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SubnetworkSpec defines the desired state of Subnetwork
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource. This field can be
                      set only at resource creation time.
                    type: string
                  ipCidrRange:
                    description: The range of internal addresses that are owned by
                      this subnetwork. Provide this property when you create the subnetwork.
                      For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique
                      and non-overlapping within a network. Only IPv4 is supported.
                    type: string
                  ipv6AccessType:
                    description: 'The access type of IPv6 address this subnet holds.
                      It''s immutable and can only be specified during creation or
                      the first time the subnet is updated into IPV4_IPV6 dual stack.
                      If the ipv6_type is EXTERNAL then this subnet cannot enable
                      direct path. Possible values: ["EXTERNAL"]'
                    type: string
                  logConfig:
                    description: Denotes the logging options for the subnetwork flow
                      logs. If logging is enabled logs will be exported to Stackdriver.
                      This field cannot be set if the 'purpose' of this subnetwork
                      is 'INTERNAL_HTTPS_LOAD_BALANCER'
                    items:
                      properties:
                        aggregationInterval:
                          description: 'Can only be specified if VPC flow logging
                            for this subnetwork is enabled. Toggles the aggregation
                            interval for collecting flow logs. Increasing the interval
                            time will reduce the amount of generated flow logs for
                            long lasting connections. Default is an interval of 5
                            seconds per connection. Default value: "INTERVAL_5_SEC"
                            Possible values: ["INTERVAL_5_SEC", "INTERVAL_30_SEC",
                            "INTERVAL_1_MIN", "INTERVAL_5_MIN", "INTERVAL_10_MIN",
                            "INTERVAL_15_MIN"]'
                          type: string
                        filterExpr:
                          description: Export filter used to define which VPC flow
                            logs should be logged, as as CEL expression. See https://cloud.google.com/vpc/docs/flow-logs#filtering
                            for details on how to format this field. The default value
                            is 'true', which evaluates to include everything.
                          type: string
                        flowSampling:
                          description: Can only be specified if VPC flow logging for
                            this subnetwork is enabled. The value of the field must
                            be in [0, 1]. Set the sampling rate of VPC flow logs within
                            the subnetwork where 1.0 means all collected logs are
                            reported and 0.0 means no logs are reported. Default is
                            0.5 which means half of all collected logs are reported.
                          type: number
                        metadata:
                          description: 'Can only be specified if VPC flow logging
                            for this subnetwork is enabled. Configures whether metadata
                            fields should be added to the reported VPC flow logs.
                            Default value: "INCLUDE_ALL_METADATA" Possible values:
                            ["EXCLUDE_ALL_METADATA", "INCLUDE_ALL_METADATA", "CUSTOM_METADATA"]'
                          type: string
                        metadataFields:
                          description: List of metadata fields that should be added
                            to reported logs. Can only be specified if VPC flow logs
                            for this subnetwork is enabled and "metadata" is set to
                            CUSTOM_METADATA.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  network:
                    description: The network this subnet belongs to. Only networks
                      that are in the distributed mode can have subnetworks.
                    type: string
                  networkRef:
                    description: A Reference to a named object.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: A Selector selects an object.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  privateIpGoogleAccess:
                    description: When enabled, VMs in this subnetwork without external
                      IP addresses can access Google APIs and services by using Private
                      Google Access.
                    type: boolean
                  privateIpv6GoogleAccess:
                    description: The private IPv6 google access type for the VMs in
                      this subnet.
                    type: string
                  project:
                    type: string
                  purpose:
                    description: "The purpose of the resource. This field can be either
                      PRIVATE or INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose
                      set to INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork
                      that is reserved for Internal HTTP(S) Load Balancing. If unspecified,
                      the purpose defaults to PRIVATE. \n If set to INTERNAL_HTTPS_LOAD_BALANCER
                      you must also set 'role'."
                    type: string
                  region:
                    description: The GCP region for this subnetwork.
                    type: string
                  role:
                    description: 'The role of subnetwork. Currently, this field is
                      only used when purpose = INTERNAL_HTTPS_LOAD_BALANCER. The value
                      can be set to ACTIVE or BACKUP. An ACTIVE subnetwork is one
                      that is currently being used for Internal HTTP(S) Load Balancing.
                      A BACKUP subnetwork is one that is ready to be promoted to ACTIVE
                      or is currently draining. Possible values: ["ACTIVE", "BACKUP"]'
                    type: string
                  secondaryIpRange:
                    description: "An array of configurations for secondary IP ranges
                      for VM instances contained in this subnetwork. The primary IP
                      of such VM must belong to the primary ipCidrRange of the subnetwork.
                      The alias IPs may belong to either primary or secondary ranges.
                      \n **Note**: This field uses [attr-as-block mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html)
                      to avoid breaking users during the 0.12 upgrade. To explicitly
                      send a list of zero objects you must use the following syntax:
                      'example=[]' For more details about this behavior, see [this
                      section](https://www.terraform.io/docs/configuration/attr-as-blocks.html#defining-a-fixed-object-collection-value)."
                    items:
                      properties:
                        ipCidrRange:
                          type: string
                        rangeName:
                          type: string
                      type: object
                    type: array
                  stackType:
                    description: 'The stack type for this subnet to identify whether
                      the IPv6 feature is enabled or not. If not specified IPV4_ONLY
                      will be used. Possible values: ["IPV4_ONLY", "IPV4_IPV6"]'
                    type: string
                required:
                - ipCidrRange
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: SubnetworkStatus defines the observed state of Subnetwork.
            properties:
              atProvider:
                properties:
                  creationTimestamp:
                    type: string
                  externalIpv6Prefix:
                    type: string
                  fingerprint:
                    type: string
                  gatewayAddress:
                    type: string
                  id:
                    type: string
                  ipv6CidrRange:
                    type: string
                  selfLink:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
